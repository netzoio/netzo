{
    "openapi": "3.0.0",
    "info": {
        "version": "2.0.0",
        "title": "DSC WMS APIs",
        "description": "The WMS APIs provide an interface to the DSC Warehouse Management System (WMS) operations.\n"
    },
    "security": [
        {
            "basicAuth": []
        }
    ],
    "tags": [
        {
            "name": "Item Master",
            "description": "Also known as an Inventory Master. The Item Master sends product information from the customer to the warehouse to enable the warehouse to receive deliveries of the product."
        },
        {
            "name": "Inventory Management",
            "description": "The Inventory Management API provides the customer with the current inventory levels, inventory details and its status to enable inventory reconciliation. Please note that this API relates to single inventory records only. If full inventory information is required, please discuss this with your DHL Supply Chain contacts."
        },
        {
            "name": "Outbound Logistics Order",
            "description": "The Outbound Logistics Order is used as a request from the customer to the warehouse to pick/pack and dispatch goods. Also known as a Sales Order, Pick Ticket or Stock Transfer Order."
        },
        {
            "name": "Inbound Logistics Order",
            "description": "Also known as Advance Shipping Notification (ASN), Purchase Order, Goods Receipt Notification or Shipment / Delivery advice. The Inbound Logistics Order notifies the warehouse that a stock replenishment delivery is scheduled or is on its way to the warehouse."
        },
        {
            "name": "Return Order",
            "description": "The Return Order deals with customer returns /  an order that describes inventory that has been returned to the warehouse from a customer "
        }
    ],
    "paths": {
        "/item": {
            "get": {
                "tags": [
                    "Item Master"
                ],
                "summary": "Retrieves Item information",
                "description": "This API returns detailed information for a particular item from the backend WMS application.",
                "parameters": [
                    {
                        "name": "facilityId",
                        "in": "query",
                        "description": "DSC facility ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "customerId",
                        "in": "query",
                        "description": "DSC customer ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "itemNumber",
                        "in": "query",
                        "description": "The item number",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The item information was retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/item_response"
                                }
                            },
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/item_response"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/item_input_invalid"
                                }
                            },
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/item_input_invalid"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Invalid combination of user, customer_id, facility and message type",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/item_permission_refused"
                                }
                            },
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/item_permission_refused"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Item number not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/item_not_found"
                                }
                            },
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/item_not_found"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Item Master"
                ],
                "summary": "Create an Item",
                "description": "The API operation for creating a new item in the backend WMS application.",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/item_create"
                            }
                        }
                    },
                    "description": "Item definition",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "The item was created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/item_response"
                                }
                            },
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/item_response"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/item_input_invalid"
                                }
                            },
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/item_input_invalid"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Invalid combination of user, customer_id, facility and message type",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/item_permission_refused"
                                }
                            },
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/item_permission_refused"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Item already exists",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/item_conflict"
                                }
                            },
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/item_conflict"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/item_service_unavailable"
                                }
                            },
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/item_service_unavailable"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Item Master"
                ],
                "summary": "Update an Item",
                "description": "The API operation for updating an existing item in the backend WMS application.",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/item_update"
                            }
                        }
                    },
                    "description": "Item definition",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "The item was updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/item_response"
                                }
                            },
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/item_response"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/item_input_invalid"
                                }
                            },
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/item_input_invalid"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Invalid combination of user, customer_id, facility and message type",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/item_permission_refused"
                                }
                            },
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/item_permission_refused"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Item not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/item_not_found"
                                }
                            },
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/item_not_found"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Resource already exists",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/item_conflict"
                                }
                            },
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/item_conflict"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/item_service_unavailable"
                                }
                            },
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/item_service_unavailable"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/inventory/detail": {
            "get": {
                "tags": [
                    "Inventory Management"
                ],
                "summary": "Get Inventory Details",
                "description": "This API can be used to inform the requester of a quantity or status of a inventory record along with its detail information from the backend WMS application. Please note that at least one of the optional parameters must be provided.",
                "parameters": [
                    {
                        "name": "facilityId",
                        "in": "query",
                        "description": "DSC facility ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "customerId",
                        "in": "query",
                        "description": "DSC customer ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "itemNumber",
                        "in": "query",
                        "description": "The item number",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "lotNumber",
                        "in": "query",
                        "description": "The lot (batch) number",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "revisionLevel",
                        "in": "query",
                        "description": "The revision level",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "inventoryStatus",
                        "in": "query",
                        "description": "The inventory status",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "Available",
                                "CriticalHold",
                                "Damaged",
                                "Expired",
                                "Hold",
                                "Inspection",
                                "PutAside",
                                "Release",
                                "Returned",
                                "Salvaged",
                                "TimeHold",
                                "OffQuality",
                                "Unshippable",
                                "Unusable"
                            ]
                        }
                    },
                    {
                        "name": "customsBonded",
                        "in": "query",
                        "description": "The custom bonded flag",
                        "schema": {
                            "type": "string",
                            "enum": [
                                true,
                                false
                            ]
                        }
                    },
                    {
                        "name": "warehouseLocationID",
                        "in": "query",
                        "description": "The warehouse location id",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "palletID",
                        "in": "query",
                        "description": "The pallet ID",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "cartonID",
                        "in": "query",
                        "description": "The carton ID",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "serialNumber",
                        "in": "query",
                        "description": "The item serial number",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "originCode",
                        "in": "query",
                        "description": "The origin code",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fromManufactureDate",
                        "in": "query",
                        "description": "Manufacturing date start datetime. Querying using the frommanufactureDate and tomanufactureDate would filter the results",
                        "schema": {
                            "type": "string",
                            "format": "yyyymmddhhmmss"
                        }
                    },
                    {
                        "name": "toManufactureDate",
                        "in": "query",
                        "description": "Manufacturing date end datetime. Can only be used along with fromManufactureDate",
                        "schema": {
                            "type": "string",
                            "format": "yyyymmddhhmmss"
                        }
                    },
                    {
                        "name": "fromExpiryDate",
                        "in": "query",
                        "description": "Expiration date start datetime. Querying using the fromexpiryDate and toexpiryDate would filter the results",
                        "schema": {
                            "type": "string",
                            "format": "yyyymmddhhmmss"
                        }
                    },
                    {
                        "name": "toExpiryDate",
                        "in": "query",
                        "description": "Expiration date end datetime. Can only be used along with fromExpiryDate",
                        "schema": {
                            "type": "string",
                            "format": "yyyymmddhhmmss"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The item information was retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/inventory_detail_response"
                                }
                            },
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/inventory_detail_response"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/item_input_invalid"
                                }
                            },
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/item_input_invalid"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Invalid combination of user, customer_id, facility and message type",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/item_permission_refused"
                                }
                            },
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/item_permission_refused"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Item number not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/item_not_found"
                                }
                            },
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/item_not_found"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/inventory/summary": {
            "get": {
                "tags": [
                    "Inventory Management"
                ],
                "summary": "Get Inventory Summary",
                "description": "This API can be used to inform the requester about their inventory summary information. The optional parameters of the API operation are conditional.",
                "parameters": [
                    {
                        "name": "facilityId",
                        "in": "query",
                        "description": "DSC facility ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "customerId",
                        "in": "query",
                        "description": "DSC customer ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "itemNumber",
                        "in": "query",
                        "description": "The item number",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "lotNumber",
                        "in": "query",
                        "description": "The lot (batch) number",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "originCode",
                        "in": "query",
                        "description": "Indicates the country of origin",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "revisionLevel",
                        "in": "query",
                        "description": "The revision level",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "inventoryStatus",
                        "in": "query",
                        "description": "The inventory status",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "Available",
                                "CriticalHold",
                                "Damaged",
                                "Expired",
                                "Hold",
                                "Inspection",
                                "Release",
                                "Returned",
                                "Salvaged",
                                "TimeHold"
                            ]
                        }
                    },
                    {
                        "name": "customsBonded",
                        "in": "query",
                        "description": "The custom bonded flag",
                        "schema": {
                            "type": "string",
                            "enum": [
                                true,
                                false
                            ]
                        }
                    },
                    {
                        "name": "groupby",
                        "in": "query",
                        "description": "Comma separated list of field names to group the results by. If not present, no grouping happens.",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "lotNumber",
                                "inventoryStatus",
                                "manufactureDate",
                                "expiryDate",
                                "originCode",
                                "revisionLevel",
                                "customsBonded"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The inventory information was retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/inventory_summary_response"
                                }
                            },
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/inventory_summary_response"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/item_input_invalid"
                                }
                            },
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/item_input_invalid"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Invalid combination of user, customer_id, facility and message type",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/item_permission_refused"
                                }
                            },
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/item_permission_refused"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Item number not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/item_not_found"
                                }
                            },
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/item_not_found"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/inventory/batch-release": {
            "put": {
                "tags": [
                    "Inventory Management"
                ],
                "summary": "Inventory batch release process",
                "description": "The API operation for updating an inventory batch status in the backend WMS application.",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/inventory_batch"
                            }
                        }
                    },
                    "description": "Order definition",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "The inventory batch was updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/inventory_batch_response"
                                }
                            },
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/inventory_batch_response"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/item_input_invalid"
                                }
                            },
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/item_input_invalid"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Invalid combination of user, customer_id, facility and message type",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/item_permission_refused"
                                }
                            },
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/item_permission_refused"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Item already exists",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/item_conflict"
                                }
                            },
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/item_conflict"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/item_service_unavailable"
                                }
                            },
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/item_service_unavailable"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/order/list": {
            "get": {
                "tags": [
                    "Outbound Logistics Order"
                ],
                "summary": "Retrieves order list information",
                "description": "This API returns list of orders from the backend WMS application.",
                "parameters": [
                    {
                        "name": "facilityId",
                        "in": "query",
                        "description": "DSC facility ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "customerId",
                        "in": "query",
                        "description": "DSC customer ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The number of messages to skip before starting to collect the result set. Defaults to 0.",
                        "schema": {
                            "type": "number",
                            "default": 0
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "The number of orders to return. Maximum of 50 orders can be queried at a time.",
                        "schema": {
                            "type": "number",
                            "default": 50
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The order information was retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/order_list"
                                }
                            },
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/order_list"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/order_input_invalid"
                                }
                            },
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/order_input_invalid"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Invalid combination of user, customer_id, facility and message type",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/order_permission_refused"
                                }
                            },
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/order_permission_refused"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Order number not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/order_not_found"
                                }
                            },
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/order_not_found"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/order": {
            "get": {
                "tags": [
                    "Outbound Logistics Order"
                ],
                "summary": "Retrieves order information",
                "description": "This API returns detailed information for a particular order from the backend WMS application.",
                "parameters": [
                    {
                        "name": "facilityId",
                        "in": "query",
                        "description": "DSC facility ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "customerId",
                        "in": "query",
                        "description": "DSC customer ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "orderNumber",
                        "in": "query",
                        "description": "The order number",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The order information was retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/order_response"
                                }
                            },
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/order_response"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/order_input_invalid"
                                }
                            },
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/order_input_invalid"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Invalid combination of user, customer_id, facility and message type",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/order_permission_refused"
                                }
                            },
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/order_permission_refused"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Order number not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/order_not_found"
                                }
                            },
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/order_not_found"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Outbound Logistics Order"
                ],
                "summary": "Create an order",
                "description": "The API operation for creating a new order in the backend WMS application.",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/order_create"
                            }
                        }
                    },
                    "description": "Order definition",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "The order was created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/order_response"
                                }
                            },
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/order_response"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/order_input_invalid"
                                }
                            },
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/order_input_invalid"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Invalid combination of user, customer_id, facility and message type",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/order_permission_refused"
                                }
                            },
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/order_permission_refused"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Order already exists",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/order_conflict"
                                }
                            },
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/order_conflict"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/order_service_unavailable"
                                }
                            },
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/order_service_unavailable"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Outbound Logistics Order"
                ],
                "summary": "Update an Order",
                "description": "The API operation for updating an existing order in the backend WMS application.",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/order_update"
                            }
                        }
                    },
                    "description": "Order definition",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "The order was updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/order_response"
                                }
                            },
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/order_response"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/order_input_invalid"
                                }
                            },
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/order_input_invalid"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Invalid combination of user, customer_id, facility and message type",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/order_permission_refused"
                                }
                            },
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/order_permission_refused"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Order not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/order_not_found"
                                }
                            },
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/order_not_found"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Resource already exists",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/order_conflict"
                                }
                            },
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/order_conflict"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/order_service_unavailable"
                                }
                            },
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/order_service_unavailable"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Outbound Logistics Order"
                ],
                "summary": "Delete an order",
                "description": "This API cancels a particular order from the backend WMS application.",
                "parameters": [
                    {
                        "name": "facilityId",
                        "in": "query",
                        "description": "DSC facility ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "customerId",
                        "in": "query",
                        "description": "DSC customer ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "orderNumber",
                        "in": "query",
                        "description": "The order number",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The order information was cancelled successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/order_delete_response"
                                }
                            },
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/order_delete_response"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/order_input_invalid"
                                }
                            },
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/order_input_invalid"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Invalid combination of user, customer_id, facility and message type",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/order_permission_refused"
                                }
                            },
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/order_permission_refused"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Order number not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/order_not_found"
                                }
                            },
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/order_not_found"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/order_service_unavailable"
                                }
                            },
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/order_service_unavailable"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/asn/list": {
            "get": {
                "tags": [
                    "Inbound Logistics Order"
                ],
                "summary": "Retrieves shipment list information",
                "description": "This API returns shipment list information for a particular receipt type from the backend WMS application.",
                "parameters": [
                    {
                        "name": "facilityId",
                        "in": "query",
                        "description": "DSC facility ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "customerId",
                        "in": "query",
                        "description": "DSC customer ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "receiptType",
                        "in": "query",
                        "description": "The shipment receipt type",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "Production",
                                "InboundOrder",
                                "Return",
                                "WorkOrder",
                                "TransferShipment",
                                "Delivery"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The shipment information was retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/asn_list"
                                }
                            },
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/asn_list"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/shipment_input_invalid"
                                }
                            },
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/shipment_input_invalid"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Invalid combination of user, customer_id, facility and message type",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/shipment_permission_refused"
                                }
                            },
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/shipment_permission_refused"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Shipment number not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/shipment_not_found"
                                }
                            },
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/shipment_not_found"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/shipment_service_unavailable"
                                }
                            },
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/shipment_service_unavailable"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/asn/receipt": {
            "get": {
                "tags": [
                    "Inbound Logistics Order"
                ],
                "summary": "Retrieves shipment receipt information",
                "description": "This API returns shipment information for a particular receipt from the backend WMS application.",
                "parameters": [
                    {
                        "name": "facilityId",
                        "in": "query",
                        "description": "DSC facility ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "customerId",
                        "in": "query",
                        "description": "DSC customer ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "receiptNumber",
                        "in": "query",
                        "description": "The shipment receipt number",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The shipment information was retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/asn_receipt_response"
                                }
                            },
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/asn_receipt_response"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/shipment_input_invalid"
                                }
                            },
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/shipment_input_invalid"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Invalid combination of user, customer_id, facility and message type",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/shipment_permission_refused"
                                }
                            },
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/shipment_permission_refused"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Receipt number not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/shipment_not_found"
                                }
                            },
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/shipment_not_found"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/shipment_service_unavailable"
                                }
                            },
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/shipment_service_unavailable"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Inbound Logistics Order"
                ],
                "summary": "Create shipment receipt",
                "description": "The API operation for creating a shipment receipt in the backend WMS application.",
                "requestBody": {
                    "$ref": "#/components/requestBodies/asn_receipt"
                },
                "responses": {
                    "200": {
                        "description": "The shipment receipt was created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/asn_receipt_response"
                                }
                            },
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/asn_receipt_response"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/shipment_input_invalid"
                                }
                            },
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/shipment_input_invalid"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Invalid combination of user, customer_id, facility and message type",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/shipment_permission_refused"
                                }
                            },
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/shipment_permission_refused"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Receipt already exists",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/shipment_conflict"
                                }
                            },
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/shipment_conflict"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/shipment_service_unavailable"
                                }
                            },
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/shipment_service_unavailable"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Inbound Logistics Order"
                ],
                "summary": "Update a shipment receipt",
                "description": "The API operation for updating an existing shipment receipt in the backend WMS application.",
                "requestBody": {
                    "$ref": "#/components/requestBodies/asn_receipt"
                },
                "responses": {
                    "200": {
                        "description": "The shipmnt receipt was updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/asn_receipt_response"
                                }
                            },
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/asn_receipt_response"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/shipment_input_invalid"
                                }
                            },
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/shipment_input_invalid"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Invalid combination of user, customer_id, facility and message type",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/shipment_permission_refused"
                                }
                            },
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/shipment_permission_refused"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Receipt not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/shipment_not_found"
                                }
                            },
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/shipment_not_found"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Resource already exists",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/shipment_conflict"
                                }
                            },
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/shipment_conflict"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/shipment_service_unavailable"
                                }
                            },
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/shipment_service_unavailable"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Inbound Logistics Order"
                ],
                "summary": "Delete shipment receipt information",
                "description": "This API returns for deleting/cancelling  a particular shiment receipt from the backend WMS application.",
                "parameters": [
                    {
                        "name": "facilityId",
                        "in": "query",
                        "description": "DSC facility ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "customerId",
                        "in": "query",
                        "description": "DSC customer ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "receiptNumber",
                        "in": "query",
                        "description": "The shipment receipt number",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "shipmentNumber",
                        "in": "query",
                        "description": "The shipment number",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "supplierNumber",
                        "in": "query",
                        "description": "The supplier number",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The shipment information was retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/asn_delete_response"
                                }
                            },
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/asn_delete_response"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/shipment_input_invalid"
                                }
                            },
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/shipment_input_invalid"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Invalid combination of user, customer_id, facility and message type",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/shipment_permission_refused"
                                }
                            },
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/shipment_permission_refused"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Shipment receipt number not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/shipment_not_found"
                                }
                            },
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/shipment_not_found"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/asn/return": {
            "get": {
                "tags": [
                    "Return Order"
                ],
                "summary": "Retrieves shipment return information",
                "description": "This API returns shipment information for a particular return from backend WMS application.",
                "parameters": [
                    {
                        "name": "facilityId",
                        "in": "query",
                        "description": "DSC facility ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "customerId",
                        "in": "query",
                        "description": "DSC customer ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "receiptNumber",
                        "in": "query",
                        "description": "The shipment receipt number",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The shipment return information was retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/asn_return"
                                }
                            },
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/asn_return"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/shipment_input_invalid"
                                }
                            },
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/shipment_input_invalid"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Invalid combination of user, customer_id, facility and message type",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/shipment_permission_refused"
                                }
                            },
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/shipment_permission_refused"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Receipt number not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/shipment_not_found"
                                }
                            },
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/shipment_not_found"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Return Order"
                ],
                "summary": "Create shipment return",
                "description": "The API operation for creating a shipment return in the backend WMS application.",
                "requestBody": {
                    "$ref": "#/components/requestBodies/asn_return"
                },
                "responses": {
                    "200": {
                        "description": "The shipment return was created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/asn_return_response"
                                }
                            },
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/asn_return_response"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/shipment_input_invalid"
                                }
                            },
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/shipment_input_invalid"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Invalid combination of user, customer_id, facility and message type",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/shipment_permission_refused"
                                }
                            },
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/shipment_permission_refused"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Receipt already exists",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/shipment_conflict"
                                }
                            },
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/shipment_conflict"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/shipment_service_unavailable"
                                }
                            },
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/shipment_service_unavailable"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Return Order"
                ],
                "summary": "Update a shipment return",
                "description": "The API operation for updating an existing shipment return in the backend WMS application.",
                "requestBody": {
                    "$ref": "#/components/requestBodies/asn_return"
                },
                "responses": {
                    "200": {
                        "description": "The shipment return was updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/asn_return_response"
                                }
                            },
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/asn_return_response"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/shipment_input_invalid"
                                }
                            },
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/shipment_input_invalid"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Invalid combination of user, customer_id, facility and message type",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/shipment_permission_refused"
                                }
                            },
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/shipment_permission_refused"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Shipment return not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/shipment_not_found"
                                }
                            },
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/shipment_not_found"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Resource already exists",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/shipment_conflict"
                                }
                            },
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/shipment_conflict"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/shipment_service_unavailable"
                                }
                            },
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/shipment_service_unavailable"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Return Order"
                ],
                "summary": "Delete shipment return information",
                "description": "This API returns for deleting/cancelling  a particular shipment return from the backend WMS application.",
                "parameters": [
                    {
                        "name": "facilityId",
                        "in": "query",
                        "description": "DSC facility ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "customerId",
                        "in": "query",
                        "description": "DSC customer ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "receiptNumber",
                        "in": "query",
                        "description": "The shipment receipt number",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "shipmentNumber",
                        "in": "query",
                        "description": "The shipment number",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "supplierNumber",
                        "in": "query",
                        "description": "The supplier number",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The Shipment information was deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/asn_delete_response"
                                }
                            },
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/asn_delete_response"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/shipment_input_invalid"
                                }
                            },
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/shipment_input_invalid"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Invalid combination of user, customer_id, facility and message type",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/shipment_permission_refused"
                                }
                            },
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/shipment_permission_refused"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Shipment return number not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/shipment_not_found"
                                }
                            },
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/shipment_not_found"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/shipment_service_unavailable"
                                }
                            },
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/shipment_service_unavailable"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "servers": [
        {
            "url": "https://dsc.api-sandbox.dhl.com/dhllink/wms/v2"
        },
        {
            "url": "https://dsc.api.dhl.com/dhllink/wms/v2"
        }
    ],
    "components": {
        "requestBodies": {
            "asn_receipt": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/asn_receipt"
                        }
                    }
                },
                "description": "Shipment receipt definition",
                "required": true
            },
            "asn_return": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/asn_return"
                        }
                    }
                },
                "description": "Shipment return definition",
                "required": true
            }
        },
        "securitySchemes": {
            "basicAuth": {
                "type": "http",
                "description": "HTTP Basic Authentication. Works over `HTTP` and `HTTPS`",
                "scheme": "basic"
            }
        },
        "schemas": {
            "item": {
                "type": "object",
                "properties": {
                    "facilityId": {
                        "type": "string",
                        "description": "DSC facility id."
                    },
                    "customerId": {
                        "type": "string",
                        "description": "DSC customer id."
                    },
                    "itemNumber": {
                        "type": "string",
                        "description": "Item number that was queried."
                    },
                    "itemPart": {
                        "type": "object",
                        "required": [
                            "itemLongDescription"
                        ],
                        "properties": {
                            "itemShortDescription": {
                                "type": "string",
                                "description": "Short description of the item."
                            },
                            "itemLongDescription": {
                                "type": "string",
                                "description": "Long Description of the item."
                            },
                            "itemFamily": {
                                "type": "string",
                                "description": "Unique code used to group items having the same material handling characteristics."
                            },
                            "color": {
                                "type": "string",
                                "description": "The color of the item"
                            },
                            "fit": {
                                "type": "string",
                                "description": "The fit of the item. Applicable for fashion related items"
                            },
                            "loadLevel": {
                                "type": "string",
                                "description": "The minimum LPN level that identifies the item during the receiving and tracking proces. L - LPN , S - Sub-LPN, D- Detail LPN]",
                                "enum": [
                                    "L",
                                    "S",
                                    "D"
                                ]
                            },
                            "size": {
                                "example": "S - Small",
                                "type": "string",
                                "description": "The size of the item. Applicable for fashion and retail related items"
                            },
                            "style": {
                                "type": "string",
                                "description": "The style of the item"
                            },
                            "hazardousMaterialFlag": {
                                "type": "boolean",
                                "description": "Code that informs whether the item is hazardous."
                            },
                            "itemTypeCode": {
                                "type": "string",
                                "description": "Unique code used to group items for reporting purpose."
                            },
                            "originCodeFlag": {
                                "type": "boolean",
                                "description": "Indicates whether country of origin is tracked."
                            },
                            "revisionLevelFlag": {
                                "type": "boolean",
                                "description": "Indicates whether revision level is tracked."
                            },
                            "lotTrackingFlag": {
                                "type": "boolean",
                                "description": "Indicates whether lot number is tracked."
                            },
                            "lotFormatId": {
                                "type": "string",
                                "description": "Format of the lot number."
                            },
                            "supplierLotFlag": {
                                "type": "boolean",
                                "description": "Indicates whether supplier lot number is tracked."
                            },
                            "stockingUOM": {
                                "type": "string",
                                "description": "Unit of measure of stock. EA- Eaches , CS - Case, PA - Pallet ,  IP - Inner Pack, BO - Box, DR - Drum , LA - Layer",
                                "enum": [
                                    "EA",
                                    "CS",
                                    "PA",
                                    "IP",
                                    "BO",
                                    "DR",
                                    "LA"
                                ]
                            },
                            "receiveStatus": {
                                "type": "string",
                                "description": "Default inventory status when receiving product. This field is mandatory for JDA but not for WMOS.",
                                "enum": [
                                    "Available",
                                    "CriticalHold",
                                    "Damaged",
                                    "Expired",
                                    "Hold",
                                    "Inspection",
                                    "Release",
                                    "Returned",
                                    "Salvaged",
                                    "TimeHold"
                                ]
                            },
                            "receiveUOM": {
                                "type": "string",
                                "description": "Unit of measure used when receiving product.EA- Eaches , CS - Case, PA - Pallet ,  IP - Inner Pack, BO - Box, DR - Drum , LA - Layer. This field is mandatory for JDA but not for WMOS.",
                                "enum": [
                                    "EA",
                                    "CS",
                                    "PA",
                                    "IP",
                                    "BO",
                                    "DR",
                                    "LA"
                                ]
                            },
                            "agingProfileName": {
                                "type": "string",
                                "description": "Default aging profile assigned to this item."
                            },
                            "timeToWarnForExpiration": {
                                "type": "number",
                                "description": "Amount of time before item expiry when system will give warning message to user. Time unit is in seconds."
                            },
                            "FIFOWindow": {
                                "type": "number",
                                "description": "Indicate time interval in which item should be considered for FIFO during item storage. The units for the value are specified in timeCode"
                            },
                            "timeCode": {
                                "type": "string",
                                "description": "Determines how FIFO window will be evaluated in system.  D- Days, H - Hours, M- Minutes.",
                                "enum": [
                                    "D",
                                    "H",
                                    "M"
                                ]
                            },
                            "velocityZone": {
                                "type": "string",
                                "description": "Code that identifies speed at which item will move in and out of a storage location."
                            },
                            "abcCode": {
                                "type": "string",
                                "description": "Code that indicates relative frequency at which item should be counted."
                            },
                            "serializationLevel": {
                                "type": "string",
                                "description": "Indicates inventory level at which serial numbers will be tracked."
                            },
                            "serializationType": {
                                "type": "string",
                                "description": "Indicates process flow during which serial numbers will be tracked."
                            },
                            "costPerUnit": {
                                "type": "number",
                                "description": "Cost of a single unit of this product."
                            },
                            "currencyCode": {
                                "type": "string",
                                "description": "3 character ISO currency code."
                            },
                            "shelfLife": {
                                "type": "number",
                                "description": "Shelf life of item. The unit for the value is specified in shelfLifeTimeCode."
                            },
                            "shelfLifeTimeCode": {
                                "type": "string",
                                "description": "Time code used when controlling shelf life of this product. D- Day , H - Hours, M- Minutes.",
                                "enum": [
                                    "D",
                                    "H",
                                    "M"
                                ]
                            },
                            "expiryManufactureDateTracking": {
                                "type": "string",
                                "description": "Determines whether product is date-controlled."
                            },
                            "receivableFlag": {
                                "type": "boolean",
                                "description": "Indicates whether an item is receivable."
                            }
                        }
                    },
                    "alternateParts": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "required": [
                                "alternateItemType"
                            ],
                            "properties": {
                                "alternateItemNumber": {
                                    "type": "string",
                                    "description": "Attribute for a item/client_id combination and can be used anywhere item is entered. This field is mandatory for JDA but not for WMOS."
                                },
                                "alternateItemType": {
                                    "type": "string",
                                    "description": "Categorizes alternate item number."
                                },
                                "uomCode": {
                                    "type": "string",
                                    "description": "Defines the level to apply alternate item number. This field is mandatory for JDA but not for WMOS."
                                }
                            }
                        }
                    },
                    "footprint": {
                        "type": "object",
                        "required": [
                            "longDescription",
                            "casesPerLayer",
                            "footprintDetails"
                        ],
                        "properties": {
                            "footprintCode": {
                                "type": "string",
                                "description": "Footprint code. This field is mandatory for JDA but not for WMOS."
                            },
                            "longDescription": {
                                "type": "string",
                                "description": "More detailed description of item number."
                            },
                            "shortDescription": {
                                "type": "string",
                                "description": "Shorter description of item number."
                            },
                            "casesPerLayer": {
                                "type": "number",
                                "description": "Number of cases on each tier of pallet load."
                            },
                            "palletStackHeight": {
                                "type": "string",
                                "description": "Allows to define Pallet Stack Height for footprint."
                            },
                            "footprintDetails": {
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "required": [
                                        "uomCode",
                                        "uomLevel",
                                        "length",
                                        "width",
                                        "height",
                                        "grossWeight",
                                        "netWeight",
                                        "unitQuantity",
                                        "thresholdPercentage"
                                    ],
                                    "properties": {
                                        "footprintCode": {
                                            "type": "string",
                                            "description": "Footprint Code."
                                        },
                                        "uomCode": {
                                            "type": "string",
                                            "description": "Unit of measure code.  EA- Eaches , CS - Case, PA - Pallet ,  IP - Inner Pack, BO - Box, DR - Drum , LA - Layer",
                                            "enum": [
                                                "EA",
                                                "CS",
                                                "PA",
                                                "IP",
                                                "BO",
                                                "DR",
                                                "LA"
                                            ]
                                        },
                                        "uomLevel": {
                                            "type": "number",
                                            "description": "UOM level."
                                        },
                                        "uomQuantity": {
                                            "type": "number",
                                            "description": "Quantity of stocking units contained within this UoM."
                                        },
                                        "unitUOMFlag": {
                                            "type": "boolean",
                                            "description": "Flag to indicate whether this UoM is unit UoM for product."
                                        },
                                        "caseFlag": {
                                            "type": "boolean",
                                            "description": "Indicates if current UOM is case UOM."
                                        },
                                        "packFlag": {
                                            "type": "boolean",
                                            "description": "Indicates if current UOM is package UOM."
                                        },
                                        "palletFlag": {
                                            "type": "boolean",
                                            "description": "Indicates if current UOM is pallet UOM."
                                        },
                                        "bulkPickingFlag": {
                                            "type": "boolean",
                                            "description": "Indicates whether the UOM can be aggregated for bulk picking."
                                        },
                                        "cartonizationFlag": {
                                            "type": "boolean",
                                            "description": "Indicates whether the UOM can be cartonized."
                                        },
                                        "cartonDistributionFlag": {
                                            "type": "boolean",
                                            "description": "Indicates if current UOM must be placed in carton during distribution process."
                                        },
                                        "layerFlag": {
                                            "type": "boolean",
                                            "description": "Indicates if current UOM represents a single layer on a pallet of inventory."
                                        },
                                        "grossWeight": {
                                            "type": "number",
                                            "description": "Gross weight which is weight with package."
                                        },
                                        "grossWeightUOM": {
                                            "type": "string",
                                            "description": "Gross weight unit of measure. G-Gram,KG-Kilogram,OZ-Ounce,LB-Pound,TON-Short Ton,MTON-Tonne,LTON-Large Tonne",
                                            "enum": [
                                                "G",
                                                "KG",
                                                "OZ",
                                                "LB",
                                                "TON",
                                                "MTON",
                                                "LTON"
                                            ]
                                        },
                                        "netWeight": {
                                            "type": "number",
                                            "description": "Net weight which is weight without package."
                                        },
                                        "netWeightUOM": {
                                            "type": "string",
                                            "description": "Net weight unit of measure. G-Gram,KG-Kilogram,OZ-Ounce,LB-Pound,TON-Short Ton,MTON-Tonne,LTON-Large Tonne",
                                            "enum": [
                                                "G",
                                                "KG",
                                                "OZ",
                                                "LB",
                                                "TON",
                                                "MTON",
                                                "LTON"
                                            ]
                                        },
                                        "length": {
                                            "type": "number",
                                            "description": "Length of item."
                                        },
                                        "lengthUOM": {
                                            "type": "string",
                                            "description": "Length UOM. CM - Centimeter , DM - Decimeter, M - Meter, MM - Millimeter, FT - Feet, IN - Inches, YD - Yard.",
                                            "enum": [
                                                "CM",
                                                "DM",
                                                "M",
                                                "MM",
                                                "FT",
                                                "IN",
                                                "YD"
                                            ]
                                        },
                                        "width": {
                                            "type": "number",
                                            "description": "Width of item."
                                        },
                                        "widthUOM": {
                                            "type": "string",
                                            "description": "Width UOM.",
                                            "enum": [
                                                "CM",
                                                "DM",
                                                "M",
                                                "MM",
                                                "FT",
                                                "IN",
                                                "YD"
                                            ]
                                        },
                                        "height": {
                                            "type": "number",
                                            "description": "Height of item."
                                        },
                                        "heightUOM": {
                                            "type": "string",
                                            "description": "Height UOM.",
                                            "enum": [
                                                "CM",
                                                "DM",
                                                "M",
                                                "MM",
                                                "FT",
                                                "IN",
                                                "YD"
                                            ]
                                        },
                                        "thresholdPercentage": {
                                            "type": "number",
                                            "description": "Minimum percentage value of the UOM capacity that a partial UOM must contain to qualify as a threshold pick."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "order": {
                "type": "object",
                "properties": {
                    "facilityId": {
                        "type": "string",
                        "description": "DSC facility id."
                    },
                    "customerId": {
                        "type": "string",
                        "description": "DSC customer id."
                    },
                    "orderNumber": {
                        "type": "string",
                        "description": "Order number that was queried."
                    },
                    "orderType": {
                        "type": "string",
                        "description": "Type of order that was queried.",
                        "enum": [
                            "AdvancedOrder",
                            "CustomerOrder",
                            "CartonisationOrder",
                            "DistributionOrder",
                            "SequencedOrder",
                            "SlottedOrder",
                            "TransferOrder",
                            "VendorReturn",
                            "PalletOrder"
                        ]
                    },
                    "orderDate": {
                        "type": "string",
                        "example": 20190801223000,
                        "description": "The date order was placed. Date Format - yyyymmddhhmmss. This field is mandatory for JDA but not for WMOS."
                    },
                    "orderStatus": {
                        "type": "string",
                        "description": "Status of the order.",
                        "example": "Unallocated,Shipped,Cancelled"
                    },
                    "customerPurchaseOrderNumber": {
                        "type": "string",
                        "description": "End customer PO Number."
                    },
                    "customerPurchaseOrderType": {
                        "type": "string",
                        "description": "End customer PO type."
                    },
                    "customerPurchaseOrderDate": {
                        "type": "string",
                        "example": 20190801223000,
                        "description": "End customer PO date. Date Format - yyyymmddhhmmss."
                    },
                    "carrierName": {
                        "type": "string",
                        "description": "Name of the carrier. This field can only take values that are allowed in the  WMS at customer level"
                    },
                    "carrierServiceLevel": {
                        "type": "string",
                        "description": "Carrier service identifier."
                    },
                    "expectedDeliveryDate": {
                        "type": "string",
                        "example": 20190801223000,
                        "description": "Expected delivery date in format yyyymmddhhmmss."
                    },
                    "expectedShipmentDate": {
                        "type": "string",
                        "example": 20190801223000,
                        "description": "Expected shipment date in format yyyymmddhhmmss."
                    },
                    "actualShipmentDate": {
                        "type": "string",
                        "example": 20190801223000,
                        "description": "Actual shipment date in format yyyymmddhhmmss."
                    },
                    "billOfLadingNumber": {
                        "type": "string",
                        "description": "Bill of lading number. Value will be returned only when querying the  WMOS back-end system."
                    },
                    "invoiceNumber": {
                        "type": "string",
                        "description": "Customer reference information. Value will be returned only when querying the  WMOS back-end system."
                    },
                    "manifestNumber": {
                        "type": "string",
                        "description": "Customer reference information. Value will be returned only when querying the  WMOS back-end system."
                    },
                    "cancelledFlag": {
                        "type": "boolean",
                        "description": "Flag to indicate if order is cancelled."
                    },
                    "orderNotes": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "allOf": [
                                {
                                    "$ref": "#/components/schemas/notes_section"
                                }
                            ],
                            "required": [
                                "noteText",
                                "noteType"
                            ]
                        }
                    },
                    "shipTo": {
                        "type": "object",
                        "required": [
                            "addressLine1",
                            "postCode",
                            "city",
                            "countryCode"
                        ],
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/contact_details"
                            }
                        ]
                    },
                    "billTo": {
                        "type": "object",
                        "required": [
                            "addressLine1",
                            "postCode",
                            "city",
                            "countryCode"
                        ],
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/contact_details"
                            }
                        ]
                    },
                    "routeTo": {
                        "type": "object",
                        "description": "The routeTo information is mandatory for JDA but not for WMOS.",
                        "required": [
                            "addressLine1",
                            "postCode",
                            "city",
                            "countryCode",
                            "customerId",
                            "addressName",
                            "addressType"
                        ],
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/contact_details"
                            }
                        ]
                    },
                    "orderLines": {
                        "type": "array",
                        "uniqueItems": true,
                        "minItems": 1,
                        "items": {
                            "type": "object",
                            "required": [
                                "lineNumber",
                                "itemNumber",
                                "orderedQuantity",
                                "inventoryStatus"
                            ],
                            "properties": {
                                "lineNumber": {
                                    "type": "number",
                                    "description": "Order line number.",
                                    "maximum": 4
                                },
                                "subLineNumber": {
                                    "type": "number",
                                    "description": "Number assigned to an  order sub-line. This field is mandatory for JDA but not for WMOS.",
                                    "maximum": 4
                                },
                                "itemNumber": {
                                    "type": "string",
                                    "description": "Item number or SKU code."
                                },
                                "lotNumber": {
                                    "type": "string",
                                    "description": "Lot (Batch) number."
                                },
                                "supplierLotNumber": {
                                    "type": "string",
                                    "description": "Vendor batch number."
                                },
                                "originalOrderedQuantity": {
                                    "type": "number",
                                    "description": "Ordered quantity."
                                },
                                "orderedQuantity": {
                                    "type": "number",
                                    "description": "The quantity that was ordered."
                                },
                                "unitOfMeasure": {
                                    "type": "string",
                                    "description": "Unit of measure used. EA- Eaches , CS - Case, PA - Pallet ,  IP - Inner Pack, BO - Box, DR - Drum , LA - Layer",
                                    "enum": [
                                        "EA",
                                        "CS",
                                        "PA",
                                        "IP",
                                        "BO",
                                        "DR",
                                        "LA"
                                    ]
                                },
                                "supplierNumber": {
                                    "type": "string",
                                    "description": "Vendor identifier."
                                },
                                "unitPrice": {
                                    "type": "number",
                                    "description": "Price per quantity."
                                },
                                "unitPriceCurrency": {
                                    "type": "string",
                                    "description": "Currency code."
                                },
                                "inventoryStatus": {
                                    "type": "string",
                                    "description": "Allows to define Pallet Stack Height for footprint.",
                                    "enum": [
                                        "Available",
                                        "CriticalHold",
                                        "Damaged",
                                        "Expired",
                                        "Hold",
                                        "Inspection",
                                        "Release",
                                        "Returned",
                                        "Salvaged",
                                        "TimeHold"
                                    ]
                                },
                                "revisionLevel": {
                                    "type": "string",
                                    "description": "Indicates the revision or version of the product."
                                },
                                "originCode": {
                                    "type": "string",
                                    "description": "Indicates the country of origin."
                                },
                                "cancelledFlag": {
                                    "type": "boolean",
                                    "description": "Flag to indicate if order line is cancelled."
                                },
                                "orderLineNotes": {
                                    "type": "array",
                                    "uniqueItems": true,
                                    "items": {
                                        "type": "object",
                                        "allOf": [
                                            {
                                                "$ref": "#/components/schemas/notes_section"
                                            }
                                        ],
                                        "required": [
                                            "noteLineNumber",
                                            "noteText",
                                            "noteType"
                                        ]
                                    }
                                }
                            }
                        }
                    }
                },
                "example": {
                    "facilityId": "GB_0044",
                    "customerId": "CID005233",
                    "orderNumber": "ORDAPITEST",
                    "orderType": "CustomerOrder",
                    "orderDate": "20170816091031",
                    "orderStatus": "Picking Begun",
                    "customerPurchaseOrderNumber": "string",
                    "customerPurchaseOrderType": "string",
                    "customerPurchaseOrderDate": "string",
                    "carrierName": "CAR1",
                    "carrierServiceLevel": "NORMAL",
                    "expectedDeliveryDate": "20190801223000",
                    "expectedShipmentDate": "20190801223000",
                    "actualShipmentDate": "20190801223000",
                    "billOfLadingNumber": "string",
                    "invoiceNumber": "string",
                    "manifestNumber": "string",
                    "cancelledFlag": false,
                    "orderNotes": [
                        {
                            "noteLineNumber": 1,
                            "noteText": "Pack separately",
                            "noteType": "ShippingNotes",
                            "noteTypeDescription": "Shipping Notes"
                        }
                    ],
                    "shipTo": {
                        "addressId": "A000000024",
                        "customerId": "EU-CUSTOMER-01",
                        "addressName": "CUST01",
                        "addressType": "CST",
                        "addressLine1": "Kelvin Street",
                        "addressLine2": "string",
                        "addressLine3": "string",
                        "postCode": "60000",
                        "city": "Brno",
                        "state": "string",
                        "countryCode": "CZE",
                        "name": "string",
                        "phoneNumber": "string",
                        "email": "string"
                    },
                    "billTo": {
                        "addressId": "A000000024",
                        "customerId": "EU-CUSTOMER-01",
                        "addressName": "CUST01",
                        "addressType": "CST",
                        "addressLine1": "Kelvin Street",
                        "addressLine2": "string",
                        "addressLine3": "string",
                        "postCode": "60000",
                        "city": "Brno",
                        "state": "string",
                        "countryCode": "CZE",
                        "name": "string",
                        "phoneNumber": "string",
                        "email": "string"
                    },
                    "routeTo": {
                        "addressId": "A000000024",
                        "customerId": "EU-CUSTOMER-01",
                        "addressName": "CUST01",
                        "addressType": "CST",
                        "addressLine1": "Kelvin Street",
                        "addressLine2": "string",
                        "addressLine3": "string",
                        "postCode": "60000",
                        "city": "Brno",
                        "state": "string",
                        "countryCode": "CZE",
                        "name": "string",
                        "phoneNumber": "string",
                        "email": "string"
                    },
                    "orderLines": [
                        {
                            "lineNumber": "0001",
                            "subLineNumber": "0000",
                            "itemNumber": "Item001",
                            "lotNumber": "LOTA",
                            "supplierLotNumber": "string",
                            "originalOrderedQuantity": 100,
                            "orderedQuantity": 50,
                            "unitOfMeasure": "EA",
                            "supplierNumber": "string",
                            "unitPrice": 5,
                            "unitPriceCurrency": "USD",
                            "inventoryStatus": "Available",
                            "revisionLevel": "EV01",
                            "originCode": "BE",
                            "cancelledFlag": false,
                            "orderLineNotes": [
                                {
                                    "noteLineNumber": "0001",
                                    "noteText": "Pack separately",
                                    "noteType": "ShippingNotes",
                                    "noteTypeDescription": "Shipping Notes"
                                }
                            ]
                        }
                    ]
                }
            },
            "contact_details": {
                "type": "object",
                "properties": {
                    "addressId": {
                        "type": "string",
                        "description": "Unique id for the address"
                    },
                    "customerId": {
                        "type": "string",
                        "description": "Unique id of the customer associated with the address"
                    },
                    "addressName": {
                        "type": "string",
                        "description": "Name to correlate the address details"
                    },
                    "addressType": {
                        "type": "string",
                        "description": "Address type (eg CST- Customer Address)",
                        "enum": [
                            "CST"
                        ]
                    },
                    "addressLine1": {
                        "type": "string",
                        "description": "First line of the address"
                    },
                    "addressLine2": {
                        "type": "string",
                        "description": "Second line of the address"
                    },
                    "addressLine3": {
                        "type": "string",
                        "description": "Third line of the address"
                    },
                    "postCode": {
                        "type": "string",
                        "description": "Zipcode or postcode"
                    },
                    "city": {
                        "type": "string",
                        "description": "City name"
                    },
                    "state": {
                        "type": "string",
                        "description": "2 or 3 character code depending on the region. e.g. 'NJ, QLD'"
                    },
                    "countryCode": {
                        "type": "string",
                        "description": "ISO Country code. e.g. AU"
                    },
                    "name": {
                        "type": "string",
                        "description": "Contact name. e.g. John Smith"
                    },
                    "phoneNumber": {
                        "type": "string",
                        "description": "Telephone number , e.g. +6512345611"
                    },
                    "email": {
                        "type": "string",
                        "description": "Email address, e.g. john.smith@microsoft.com"
                    }
                }
            },
            "notes_section": {
                "type": "object",
                "properties": {
                    "noteLineNumber": {
                        "type": "number",
                        "description": "The unique order note line number",
                        "maximum": 4
                    },
                    "noteText": {
                        "type": "string",
                        "description": "The order note description"
                    },
                    "noteType": {
                        "type": "string",
                        "description": "Order note type",
                        "enum": [
                            "Generic",
                            "ShippingNotes",
                            "DutyManagement"
                        ]
                    },
                    "noteTypeDescription": {
                        "type": "string",
                        "description": "The description of the Order note type"
                    }
                }
            },
            "order_create": {
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/order"
                    }
                ],
                "required": [
                    "facilityId",
                    "customerId",
                    "orderNumber",
                    "orderType",
                    "shipTo",
                    "billTo",
                    "orderLines"
                ]
            },
            "order_update": {
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/order"
                    }
                ],
                "required": [
                    "customerId",
                    "facilityId",
                    "orderNumber",
                    "orderType",
                    "shipTo",
                    "billTo",
                    "orderLines"
                ]
            },
            "order_response": {
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/order"
                    }
                ]
            },
            "order_list": {
                "type": "object",
                "properties": {
                    "facilityId": {
                        "type": "string",
                        "description": "DSC facility id."
                    },
                    "customerId": {
                        "type": "string",
                        "description": "DSC customer id."
                    },
                    "totalOrderCount": {
                        "type": "number",
                        "description": "Total count of orders that matched the request."
                    },
                    "orderNumberList": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "orderNumber": {
                                    "type": "string",
                                    "description": "Order number that was queried."
                                },
                                "orderStatus": {
                                    "type": "string",
                                    "description": "Status of the order.",
                                    "example": "Unallocated,Shipped,Cancelled"
                                },
                                "orderType": {
                                    "type": "string",
                                    "description": "Type of order .",
                                    "enum": [
                                        "AdvancedOrder",
                                        "CustomerOrder",
                                        "CartonisationOrder",
                                        "DistributionOrder",
                                        "SequencedOrder",
                                        "SlottedOrder",
                                        "TransferOrder",
                                        "VendorReturn",
                                        "PalletOrder"
                                    ]
                                },
                                "orderTypeDescription": {
                                    "type": "string",
                                    "description": "The order type description"
                                }
                            }
                        }
                    },
                    "offset": {
                        "type": "number",
                        "description": "The number of messages to skip before starting to collect the result set. Defaults to 0"
                    },
                    "limit": {
                        "type": "number",
                        "description": "The numbers of order to return. Maximum of 50 order can be queried at a time"
                    }
                },
                "example": {
                    "customerId": "CID000362",
                    "facilityId": "GB_0044",
                    "totalOrderCount": 637,
                    "orderNumberList": [
                        {
                            "orderNumber": "APITEST1",
                            "orderStatus": "Unallocated",
                            "orderType": "CustomerOrder",
                            "orderTypeDescription": "Customer Outbound Orders"
                        }
                    ],
                    "offset": 0,
                    "limit": 1
                }
            },
            "asn": {
                "type": "object",
                "properties": {
                    "facilityId": {
                        "type": "string",
                        "description": "DSC facility id."
                    },
                    "customerId": {
                        "type": "string",
                        "description": "DSC customer id."
                    },
                    "orderNumber": {
                        "type": "string",
                        "description": "The order number associated with the shipment."
                    },
                    "receiptNumber": {
                        "type": "string",
                        "description": "The receipt number associated with the shipment."
                    },
                    "receiptDate": {
                        "type": "string",
                        "example": 20190701223000,
                        "description": "The receipt date. Date Format - yyyymmddhhmmss and timezone should be sent in GMT."
                    },
                    "receiptType": {
                        "type": "string",
                        "description": "The type of receipt.",
                        "enum": [
                            "Production",
                            "InboundOrder",
                            "Return",
                            "WorkOrder",
                            "TransferShipment",
                            "Delivery"
                        ]
                    },
                    "receiptTypeDescription": {
                        "type": "string",
                        "description": "The description of the receipt."
                    },
                    "waybill": {
                        "type": "string",
                        "description": "The waybill number  associated with the shipment."
                    },
                    "supplierNumber": {
                        "type": "string",
                        "description": "The supplier number. This field is mandatory for JDA but not for WMOS."
                    },
                    "shipmentNumber": {
                        "type": "string",
                        "description": "The shipment number. This field is mandatory for JDA but not for WMOS."
                    }
                }
            },
            "asn_receipt_line": {
                "type": "object",
                "properties": {
                    "lineNumber": {
                        "type": "string",
                        "description": "Receipt line number.",
                        "maximum": 4
                    },
                    "subLineNumber": {
                        "type": "string",
                        "description": "Number assigned to an  order sub-line.",
                        "example": 0,
                        "maximum": 4
                    },
                    "itemNumber": {
                        "type": "string",
                        "description": "Item number or SKU code."
                    },
                    "lotNumber": {
                        "type": "string",
                        "description": "The inventory lot (batch) number."
                    },
                    "supplierLotNumber": {
                        "type": "string",
                        "description": "Vendor batch number."
                    },
                    "expectedQuantity": {
                        "type": "number",
                        "description": "The expected quantity of item."
                    },
                    "receiveStatus": {
                        "type": "string",
                        "description": "Inventory status when receiving product. This field is mandatory for JDA but not for WMOS.",
                        "enum": [
                            "Available",
                            "CriticalHold",
                            "Damaged",
                            "Expired",
                            "Hold",
                            "Inspection",
                            "Release",
                            "Returned",
                            "Salvaged",
                            "TimeHold"
                        ]
                    },
                    "revisionLevel": {
                        "type": "string",
                        "description": "Indicates the revision or version of the product.."
                    },
                    "originCode": {
                        "type": "string",
                        "description": "Indicates the country of origin"
                    },
                    "manufactureDate": {
                        "type": "string",
                        "example": 20190701223000,
                        "description": "The manufactured date. Date Format - yyyymmddhhmmss and timezone should be sent in GMT."
                    },
                    "expirationDate": {
                        "type": "string",
                        "example": 20190701223000,
                        "description": "The expiration date. Date Format - yyyymmddhhmmss and timezone should be sent in GMT."
                    }
                }
            },
            "asn_return_line": {
                "type": "object",
                "properties": {
                    "lineNumber": {
                        "type": "string",
                        "description": "Receipt line number.",
                        "maximum": 4
                    },
                    "subLineNumber": {
                        "type": "string",
                        "description": "Number assigned to an  order sub-line.",
                        "maximum": 4
                    },
                    "itemNumber": {
                        "type": "string",
                        "description": "Item number or SKU code."
                    },
                    "returnCode": {
                        "type": "string",
                        "description": "The return reason code.",
                        "enum": [
                            "Damaged",
                            "OverSupply",
                            "WrongItem"
                        ]
                    },
                    "lotNumber": {
                        "type": "string",
                        "description": "The inventory lot (batch) number."
                    },
                    "supplierLotNumber": {
                        "type": "string",
                        "description": "Vendor batch number."
                    },
                    "expectedQuantity": {
                        "type": "number",
                        "description": "The expected quantity of item."
                    },
                    "receiveStatus": {
                        "type": "string",
                        "description": "Inventory status when receiving product.",
                        "enum": [
                            "Available",
                            "CriticalHold",
                            "Damaged",
                            "Expired",
                            "Hold",
                            "Inspection",
                            "Release",
                            "Returned",
                            "Salvaged",
                            "TimeHold"
                        ]
                    },
                    "revisionLevel": {
                        "type": "string",
                        "description": "Indicates the revision or version of the product.."
                    },
                    "originCode": {
                        "type": "string",
                        "description": "Indicates the country of origin"
                    },
                    "manufactureDate": {
                        "type": "string",
                        "example": 20190701223000,
                        "description": "The manufactured date. Date Format - yyyymmddhhmmss and timezone should be sent in GMT."
                    },
                    "expirationDate": {
                        "type": "string",
                        "example": 20190701223000,
                        "description": "The expiration date. Date Format - yyyymmddhhmmss and timezone should be sent in GMT."
                    }
                }
            },
            "asn_receipt": {
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/asn"
                    }
                ],
                "required": [
                    "facilityId",
                    "customerId",
                    "receiptNumber",
                    "receiptType"
                ],
                "properties": {
                    "receiptLines": {
                        "type": "array",
                        "required": [
                            "receiptLines"
                        ],
                        "items": {
                            "type": "object",
                            "allOf": [
                                {
                                    "$ref": "#/components/schemas/asn_receipt_line"
                                }
                            ],
                            "required": [
                                "itemNumber",
                                "expectedQuantity"
                            ]
                        }
                    }
                },
                "example": {
                    "customerId": "CID000362",
                    "facilityId": "GB_0044",
                    "orderNumber": null,
                    "receiptNumber": "RCPT000000042",
                    "receiptDate": "20190708130143",
                    "receiptType": "Return",
                    "receiptTypeDescription": "Customer Return",
                    "waybill": null,
                    "supplierNumber": "EU-SUP-01",
                    "shipmentNumber": "EUGENE02",
                    "receiptLines": [
                        {
                            "lineNumber": "0001",
                            "subLineNumber": "0000",
                            "itemNumber": "EUGENEITEM",
                            "lotNumber": "LOTA",
                            "supplierLotNumber": null,
                            "expectedQuantity": 99999,
                            "receiveStatus": "Available",
                            "revisionLevel": "----",
                            "originCode": "----",
                            "manufactureDate": "",
                            "expirationDate": ""
                        }
                    ]
                }
            },
            "asn_return": {
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/asn"
                    }
                ],
                "required": [
                    "facilityId",
                    "customerId",
                    "receiptNumber",
                    "receiptType",
                    "shipmentNumber",
                    "supplierNumber"
                ],
                "properties": {
                    "receiptLines": {
                        "type": "array",
                        "uniqueItems": true,
                        "minItems": 1,
                        "required": [
                            "receiptLines"
                        ],
                        "items": {
                            "type": "object",
                            "allOf": [
                                {
                                    "$ref": "#/components/schemas/asn_return_line"
                                }
                            ],
                            "required": [
                                "lineNumber",
                                "subLineNumber",
                                "itemNumber",
                                "expectedQuantity",
                                "receiveStatus",
                                "returnCode"
                            ]
                        }
                    }
                },
                "example": {
                    "customerId": "CID000362",
                    "facilityId": "GB_0044",
                    "orderNumber": null,
                    "receiptNumber": "RCPT000000042",
                    "receiptDate": "20190708130143",
                    "receiptType": "Return",
                    "receiptTypeDescription": "Customer Return",
                    "waybill": null,
                    "supplierNumber": "EU-SUP-01",
                    "shipmentNumber": "EUGENE02",
                    "receiptLines": [
                        {
                            "lineNumber": "0001",
                            "subLineNumber": "0000",
                            "itemNumber": "EUGENEITEM",
                            "returnCode": "Damaged",
                            "lotNumber": "LOTA",
                            "supplierLotNumber": null,
                            "expectedQuantity": 99999,
                            "receiveStatus": "Available",
                            "revisionLevel": "----",
                            "originCode": "----",
                            "manufactureDate": "",
                            "expirationDate": ""
                        }
                    ]
                }
            },
            "asn_receipt_response": {
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/asn"
                    }
                ],
                "properties": {
                    "receiptLines": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "allOf": [
                                {
                                    "$ref": "#/components/schemas/asn_receipt_line"
                                }
                            ]
                        }
                    }
                }
            },
            "asn_return_response": {
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/asn"
                    }
                ],
                "properties": {
                    "receiptLines": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "allOf": [
                                {
                                    "$ref": "#/components/schemas/asn_return_line"
                                }
                            ]
                        }
                    }
                }
            },
            "asn_list": {
                "type": "object",
                "properties": {
                    "facilityId": {
                        "type": "string",
                        "description": "DSC facility id."
                    },
                    "customerId": {
                        "type": "string",
                        "description": "DSC customer id."
                    },
                    "totalASNCount": {
                        "type": "number",
                        "description": "Total count of ASNs that matched the request."
                    },
                    "ASNList": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "receiptNumber": {
                                    "type": "string",
                                    "description": "Order number that was queried."
                                },
                                "orderStatus": {
                                    "type": "string",
                                    "description": "Status of the order."
                                },
                                "shipmentNumber": {
                                    "type": "string",
                                    "description": "Shipment number associated with the order."
                                },
                                "supplierNumber": {
                                    "type": "string",
                                    "description": "Supplier number associated with the order."
                                },
                                "receiptTypeDescription": {
                                    "type": "string",
                                    "description": "The receipt type description"
                                }
                            }
                        }
                    }
                },
                "example": {
                    "customerId": "CID000362",
                    "facilityId": "GB_0044",
                    "totalASNCount": 38,
                    "ASNList": [
                        {
                            "receiptNumber": "RCPT000000042",
                            "shipmentNumber": "EUGENE02",
                            "supplierNumber": "EU-SUP-01",
                            "receiptTypeDescription": "Customer Return"
                        }
                    ]
                }
            },
            "order_delete_response": {
                "type": "object",
                "properties": {
                    "facilityId": {
                        "type": "string",
                        "description": "DSC facility id."
                    },
                    "customerId": {
                        "type": "string",
                        "description": "DSC customer id."
                    },
                    "status": {
                        "type": "string",
                        "description": "Order cancellation status."
                    },
                    "detail": {
                        "type": "string",
                        "description": "The order detail."
                    }
                },
                "example": {
                    "facilityId": "GB_0044",
                    "customerId": "CID005233",
                    "status": "Order cancelled successfully",
                    "detail": "order/ORD001"
                }
            },
            "asn_delete_response": {
                "type": "object",
                "properties": {
                    "facilityId": {
                        "type": "string",
                        "description": "DSC facility id."
                    },
                    "customerId": {
                        "type": "string",
                        "description": "DSC customer id."
                    },
                    "status": {
                        "type": "string",
                        "description": "Shipment cancellation status."
                    },
                    "detail": {
                        "type": "string",
                        "description": "The shipment receipt detail."
                    }
                },
                "example": {
                    "facilityId": "GB_0044",
                    "customerId": "CID005233",
                    "status": "ASN cancelled successfully",
                    "detail": "receipt/RCPT001"
                }
            },
            "inventory_summary": {
                "type": "object",
                "properties": {
                    "facilityId": {
                        "type": "string",
                        "description": "DSC facility id."
                    },
                    "customerId": {
                        "type": "string",
                        "description": "DSC customer id."
                    },
                    "itemNumber": {
                        "type": "string",
                        "description": "Item number that was queried."
                    },
                    "itemDescription": {
                        "type": "string",
                        "description": "Description of the item. Value will be returned only when querying the JDA back-end system."
                    },
                    "itemFamily": {
                        "type": "string",
                        "description": "Unique code used to group parts having same material handling characteristics. Value will be returned only when querying the JDA back-end system."
                    },
                    "itemSeason": {
                        "type": "string",
                        "description": "Used to depict season used for fashion related items for example spring summer. Value will be returned only when querying the JDA back-end system."
                    },
                    "itemBrand": {
                        "type": "string",
                        "description": "Brand associated with the item. Value will be returned only when querying the JDA back-end system."
                    },
                    "itemFit": {
                        "type": "string",
                        "description": "The fit of the item. Applicable for fashion related items. Value will be returned only when querying the JDA back-end system."
                    },
                    "itemStyle": {
                        "type": "string",
                        "description": "The style of the item. Value will be returned only when querying the JDA back-end system."
                    },
                    "itemColor": {
                        "type": "string",
                        "description": "Color of the item. Value will be returned only when querying the JDA back-end system."
                    },
                    "itemSize": {
                        "type": "string",
                        "description": "The size of the item. Applicable for fashion and retail related items. Value will be returned only when querying the JDA back-end system."
                    },
                    "inventoryItemReference1": {
                        "type": "string",
                        "description": "Item reference text associated with the inventory. Value will be returned only when querying the  WMOS back-end system."
                    },
                    "inventoryItemReference2": {
                        "type": "string",
                        "description": "Item reference text associated with the inventory. Value will be returned only when querying the  WMOS back-end system."
                    },
                    "inventoryItemReference3": {
                        "type": "string",
                        "description": "Item reference text associated with the inventory. Value will be returned only when querying the  WMOS back-end system."
                    },
                    "inventoryItemReference4": {
                        "type": "string",
                        "description": "Item reference text associated with the inventory. Value will be returned only when querying the  WMOS back-end system."
                    },
                    "inventoryItemReference5": {
                        "type": "string",
                        "description": "Item reference text associated with the inventory. Value will be returned only when querying the  WMOS back-end system."
                    },
                    "InventorySummaryLines": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "lotNumber": {
                                    "type": "string",
                                    "description": "Attribute for an item/client_id combination and can be used anywhere item is entered."
                                },
                                "manufactureDate": {
                                    "type": "string",
                                    "example": 20160401223000,
                                    "description": "Date of manufacture. Date Format - yyyymmddhhmmss and timezone should be sent in GMT."
                                },
                                "expiryDate": {
                                    "type": "string",
                                    "example": 20190801223000,
                                    "description": "Date of manufacture.  Date Format - yyyymmddhhmmss."
                                },
                                "inventoryStatus": {
                                    "type": "string",
                                    "description": "Current status of the item for example available blocked etc.",
                                    "enum": [
                                        "Available",
                                        "CriticalHold",
                                        "Damaged",
                                        "Expired",
                                        "Hold",
                                        "Inspection",
                                        "Release",
                                        "Returned",
                                        "Salvaged",
                                        "TimeHold"
                                    ]
                                },
                                "revisionLevel": {
                                    "type": "string",
                                    "description": "Indicates the revision or version of the product. Value will be returned only when querying the JDA back-end system."
                                },
                                "originCode": {
                                    "type": "string",
                                    "description": "Indicates the country of origin"
                                },
                                "customsBonded": {
                                    "type": "boolean",
                                    "description": "Flag to indicate whether the item is bonded or free circulation either true or false. Bonded inventory is inventory for which customs duties are required and not yet been paid. Value will be returned only when querying the JDA back-end system."
                                },
                                "serialNumber": {
                                    "type": "string",
                                    "description": "Serial number of the product. Value will be returned only when querying the JDA back-end system."
                                },
                                "availableQuantity": {
                                    "type": "integer",
                                    "description": "Quantity that is currently available in inventory."
                                },
                                "blockedQuantity": {
                                    "type": "integer",
                                    "description": "Quantity that is currently blocked in inventory."
                                },
                                "quarantineQuantity": {
                                    "type": "integer",
                                    "description": "Quantity that is currently quarantined in inventory."
                                },
                                "totalStockOnHandQuantity": {
                                    "type": "integer",
                                    "description": "Total quantity of all statuses."
                                },
                                "availableQuantityToPromise": {
                                    "type": "integer",
                                    "description": "Quantity of items that are available and not already allocated."
                                },
                                "openReceiptQuantity": {
                                    "type": "integer",
                                    "description": "Quantity pending to be received."
                                },
                                "quantityCommittedToOrder": {
                                    "type": "integer",
                                    "description": "Quantity that is allocated to orders."
                                }
                            }
                        }
                    }
                }
            },
            "inventory_detail": {
                "type": "object",
                "properties": {
                    "facilityId": {
                        "type": "string",
                        "description": "DSC facility id."
                    },
                    "customerId": {
                        "type": "string",
                        "description": "DSC customer id."
                    },
                    "InventoryDetailLines": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "itemNumber": {
                                    "type": "string",
                                    "description": "Item number pertaining to the inventory that was queried."
                                },
                                "itemDescription": {
                                    "type": "string",
                                    "description": "Description of the item. Value will be returned only when querying the JDA back-end system."
                                },
                                "itemFamily": {
                                    "type": "string",
                                    "description": "Product group to which the item belongs. Value will be returned only when querying the JDA back-end system."
                                },
                                "itemBrand": {
                                    "type": "string",
                                    "description": "Brand associated with the item. Value will be returned only when querying the JDA back-end system."
                                },
                                "itemFit": {
                                    "type": "string",
                                    "description": "The fit of the item. Applicable for fashion related items. Value will be returned only when querying the JDA back-end system."
                                },
                                "itemStyle": {
                                    "type": "string",
                                    "description": "The style of the item. Value will be returned only when querying the JDA back-end system."
                                },
                                "itemColor": {
                                    "type": "string",
                                    "description": "Color of the item. Value will be returned only when querying the JDA back-end system."
                                },
                                "itemSize": {
                                    "type": "string",
                                    "description": "The size of the item. Applicable for fashion and retail related items. Value will be returned only when querying the JDA back-end system."
                                },
                                "inventoryItemReference1": {
                                    "type": "string",
                                    "description": "Item reference text associated with the inventory. Value will be returned only when querying the  WMOS back-end system."
                                },
                                "inventoryItemReference2": {
                                    "type": "string",
                                    "description": "Item reference text associated with the inventory. Value will be returned only when querying the  WMOS back-end system."
                                },
                                "inventoryItemReference3": {
                                    "type": "string",
                                    "description": "Item reference text associated with the inventory. Value will be returned only when querying the  WMOS back-end system."
                                },
                                "inventoryItemReference4": {
                                    "type": "string",
                                    "description": "Item reference text associated with the inventory. Value will be returned only when querying the  WMOS back-end system."
                                },
                                "inventoryItemReference5": {
                                    "type": "string",
                                    "description": "Item reference text associated with the inventory. Value will be returned only when querying the  WMOS back-end system."
                                },
                                "lotNumber": {
                                    "type": "string",
                                    "description": "Attribute for a item/client_id combination and can be used anywhere item is entered."
                                },
                                "manufactureDate": {
                                    "type": "string",
                                    "example": 20160401223000,
                                    "description": "Date of manufacture. Date Format - yyyymmddhhmmss and timezone should be sent in GMT."
                                },
                                "expiryDate": {
                                    "type": "string",
                                    "example": 20190801223000,
                                    "description": "Date of manufacture.  Date Format - yyyymmddhhmmss."
                                },
                                "inventoryStatus": {
                                    "type": "string",
                                    "description": "Current status of the inventory Available/Blocked/Damaged.",
                                    "enum": [
                                        "Available",
                                        "CriticalHold",
                                        "Damaged",
                                        "Expired",
                                        "Hold",
                                        "Inspection",
                                        "Release",
                                        "Returned",
                                        "Salvaged",
                                        "TimeHold"
                                    ]
                                },
                                "revisionLevel": {
                                    "type": "string",
                                    "description": "Revision level of the item. Revision may be used to identify a specific manufactured version of the item. Value will be returned only when querying the JDA back-end system."
                                },
                                "originCode": {
                                    "type": "string",
                                    "description": "Indicates the country of origin"
                                },
                                "customsBonded": {
                                    "type": "boolean",
                                    "description": "Indicates customs status of the inventory - bonded/not bonded. Value will be returned only when querying the JDA back-end system."
                                },
                                "serialNumber": {
                                    "type": "string",
                                    "description": "Serial number of the inventory for example serial number of phone."
                                },
                                "palletID": {
                                    "type": "string",
                                    "description": "LPN of the pallet where the item is stored."
                                },
                                "cartonID": {
                                    "type": "string",
                                    "description": "LPN of carton where inventory is stored."
                                },
                                "warehouseLocationID": {
                                    "type": "string",
                                    "description": "Storage location and warehouse. Value will be returned only when querying the JDA back-end system."
                                },
                                "availableQuantity": {
                                    "type": "integer",
                                    "description": "Quantity of inventory which is in available status."
                                },
                                "blockedQuantity": {
                                    "type": "integer",
                                    "description": "Quantity of inventory which is in blocked status. Value will be returned only when querying the JDA back-end system."
                                },
                                "quarantineQuantity": {
                                    "type": "integer",
                                    "description": "Quantity of inventory which is in quarantine status. Value will be returned only when querying the JDA back-end system."
                                },
                                "totalStockOnHandQuantity": {
                                    "type": "integer",
                                    "description": "Number of total items within the warehouse. Value will be returned only when querying the JDA back-end system."
                                },
                                "availableQuantityToPromise": {
                                    "type": "integer",
                                    "description": "Quantity of items available for allocation to orders. Value will be returned only when querying the JDA back-end system."
                                },
                                "openReceiptQuantity": {
                                    "type": "integer",
                                    "description": "Expected quantity to be received. This is not currently in the warehouse. Value will be returned only when querying the JDA back-end system."
                                },
                                "quantityCommittedToOrder": {
                                    "type": "integer",
                                    "description": "Quantity of items allocated to orders."
                                },
                                "customerReference1": {
                                    "type": "string",
                                    "description": "Customer reference for the inventory. Used by WMOS back-end system only."
                                },
                                "customerReference2": {
                                    "type": "string",
                                    "description": "Customer reference for the inventory. Used by WMOS back-end system only."
                                },
                                "customerReference3": {
                                    "type": "string",
                                    "description": "Customer reference for the inventory. Used by WMOS back-end system only."
                                },
                                "customerReference4": {
                                    "type": "string",
                                    "description": "Customer reference for the inventory. Used by WMOS back-end system only."
                                },
                                "customerReference5": {
                                    "type": "string",
                                    "description": "Customer reference for the inventory. Used by WMOS back-end system only."
                                }
                            }
                        }
                    }
                }
            },
            "inventory_batch": {
                "type": "object",
                "properties": {
                    "facilityId": {
                        "type": "string",
                        "description": "DSC facility id."
                    },
                    "customerId": {
                        "type": "string",
                        "description": "DSC customer id."
                    },
                    "itemNumber": {
                        "type": "string",
                        "description": "The item number."
                    },
                    "lotNumber": {
                        "type": "string",
                        "description": "The inventory lot number."
                    },
                    "fromStatus": {
                        "type": "string",
                        "description": "The from status of the inventory that needs update",
                        "enum": [
                            "Available",
                            "Critical Hold",
                            "Damaged",
                            "Expired",
                            "Hold",
                            "Inspection",
                            "Put Aside",
                            "Release",
                            "Returned",
                            "Salvaged",
                            "Time Hold",
                            "Off Quality",
                            "Unshippable",
                            "Unusable"
                        ]
                    },
                    "toStatus": {
                        "type": "string",
                        "description": "The to status of the inventory",
                        "enum": [
                            "Available",
                            "Critical Hold",
                            "Damaged",
                            "Expired",
                            "Hold",
                            "Inspection",
                            "Put Aside",
                            "Release",
                            "Returned",
                            "Salvaged",
                            "Time Hold",
                            "Off Quality",
                            "Unshippable",
                            "Unusable"
                        ]
                    }
                },
                "required": [
                    "facilityId",
                    "customerId",
                    "fromStatus",
                    "toStatus"
                ],
                "example": {
                    "customerId": "CID000362",
                    "facilityId": "GB_0044",
                    "itemNumber": "APITEST1",
                    "lotNumber": "MAR252019",
                    "fromStatus": "Damaged",
                    "toStatus": "Available"
                }
            },
            "inventory_batch_response": {
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/inventory_batch"
                    }
                ],
                "properties": {
                    "successQuantity": {
                        "type": "number",
                        "description": "Inventory quantity that was successfully updated in the WMS."
                    },
                    "failedQuantity": {
                        "type": "number",
                        "description": "Inventory quantity that failed update."
                    }
                },
                "example": {
                    "customerId": "CID000362",
                    "facilityId": "GB_0044",
                    "itemNumber": "APITEST1",
                    "lotNumber": "MAR252019",
                    "fromStatus": "Damaged",
                    "toStatus": "Available",
                    "successQuantity": 0,
                    "failedQuantity": 960
                }
            },
            "inventory_summary_response": {
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/inventory_summary"
                    }
                ],
                "example": {
                    "facilityId": "GB_0044",
                    "customerId": "CID005233",
                    "itemNumber": "SER_0001",
                    "itemDescription": "Item Description",
                    "itemFamily": "string",
                    "itemSeason": "string",
                    "itemBrand": "string",
                    "itemFit": "string",
                    "itemStyle": "string",
                    "itemColor": "string",
                    "itemSize": "string",
                    "inventoryItemReference1": "string",
                    "inventoryItemReference2": "string",
                    "inventoryItemReference3": "string",
                    "inventoryItemReference4": "string",
                    "inventoryItemReference5": "string",
                    "InventorySummaryLines": [
                        {
                            "lotNumber": "LOTA",
                            "manufactureDate": 20160401223000,
                            "expiryDate": 20190801223000,
                            "inventoryStatus": "Available",
                            "revisionLevel": "REV1",
                            "originCode": "BE",
                            "customsBonded": true,
                            "serialNumber": "A1783",
                            "availableQuantity": 450,
                            "blockedQuantity": 0,
                            "quarantineQuantity": 0,
                            "totalStockOnHandQuantity": 1,
                            "availableQuantityToPromise": -449,
                            "openReceiptQuantity": 0,
                            "quantityCommittedToOrder": 0
                        }
                    ]
                }
            },
            "inventory_detail_response": {
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/inventory_detail"
                    }
                ],
                "example": {
                    "facilityId": "GB_0044",
                    "customerId": "CID005233",
                    "InventoryDetailLines": [
                        {
                            "itemNumber": "SER_0001",
                            "itemDescription": "Item Description",
                            "itemFamily": "string",
                            "itemBrand": "string",
                            "itemFit": "string",
                            "itemStyle": "string",
                            "itemColor": "string",
                            "itemSize": "string",
                            "inventoryItemReference1": "string",
                            "inventoryItemReference2": "string",
                            "inventoryItemReference3": "string",
                            "inventoryItemReference4": "string",
                            "inventoryItemReference5": "string",
                            "lotNumber": "LOTA",
                            "manufactureDate": 20160401223000,
                            "expiryDate": 20190801223000,
                            "inventoryStatus": "Available",
                            "revisionLevel": "REV1",
                            "originCode": "GB",
                            "customsBonded": true,
                            "serialNumber": "A1783",
                            "palletID": "PST1LOAD1",
                            "cartonID": "PST1CASE1",
                            "warehouseLocationID": "A001B001RSL1010",
                            "availableQuantity": 1,
                            "blockedQuantity": 0,
                            "quarantineQuantity": 0,
                            "totalStockOnHandQuantity": 1,
                            "availableQuantityToPromise": -399,
                            "openReceiptQuantity": 0,
                            "quantityCommittedToOrder": 400,
                            "customerReference1": "string",
                            "customerReference2": "string",
                            "customerReference3": "string",
                            "customerReference4": "string",
                            "customerReference5": "string"
                        }
                    ]
                }
            },
            "item_response": {
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/item"
                    }
                ],
                "example": {
                    "facilityId": "GB_0044",
                    "customerId": "CID005233",
                    "itemNumber": "SER_0001",
                    "itemPart": {
                        "itemShortDescription": "Item short description",
                        "itemLongDescription": "Item long description",
                        "itemFamily": "",
                        "hazardousMaterialFlag": false,
                        "itemTypeCode": "",
                        "color": "blue",
                        "fit": "loose",
                        "loadLevel": "L",
                        "size": "M",
                        "style": "casual",
                        "originCodeFlag": false,
                        "revisionLevelFlag": false,
                        "lotTrackingFlag": false,
                        "lotFormatId": "",
                        "supplierLotFlag": false,
                        "stockingUOM": "EA",
                        "receiveStatus": "A",
                        "receiveUOM": "",
                        "agingProfileName": "",
                        "timeToWarnForExpiration": 3600,
                        "FIFOWindow": 1,
                        "timeCode": "D",
                        "velocityZone": "",
                        "abcCode": "",
                        "serializationLevel": "D",
                        "serializationType": "OUTCAP_ONLY",
                        "costPerUnit": 0,
                        "currencyCode": "USD",
                        "shelfLife": 1,
                        "shelfLifeTimeCode": "D",
                        "expiryManufactureDateTracking": "",
                        "receivableFlag": true
                    },
                    "alternateParts": [
                        {
                            "alternateItemNumber": "ALT1",
                            "alternateItemType": "EAN",
                            "uomCode": "CS"
                        }
                    ],
                    "footprint": {
                        "footprintCode": "SAMPFTPRNT",
                        "longDescription": "Sample Foot print",
                        "shortDescription": "",
                        "casesPerLayer": 5,
                        "palletStackHeight": 0,
                        "footprintDetails": [
                            {
                                "footprintCode": "SAMPFTPRNT",
                                "uomCode": "EA",
                                "uomLevel": 0,
                                "uomQuantity": 1,
                                "unitUOMFlag": true,
                                "caseFlag": false,
                                "packFlag": false,
                                "palletFlag": false,
                                "bulkPickingFlag": true,
                                "cartonizationFlag": true,
                                "cartonDistributionFlag": false,
                                "layerFlag": false,
                                "grossWeight": 160,
                                "grossWeightUOM": "KG",
                                "netWeight": 160,
                                "netWeightUOM": "KG",
                                "length": 1,
                                "lengthUOM": "FT",
                                "width": 1,
                                "widthUOM": "FT",
                                "height": 1,
                                "heightUOM": "FT",
                                "thresholdPercentage": 100
                            }
                        ]
                    }
                }
            },
            "item_create": {
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/item"
                    }
                ],
                "required": [
                    "facilityId",
                    "customerId",
                    "itemNumber",
                    "itemPart",
                    "alternateParts",
                    "footprint"
                ],
                "example": {
                    "facilityId": "GB_0044",
                    "customerId": "CID005233",
                    "itemNumber": "SER_0001",
                    "itemPart": {
                        "receiveStatus": "A",
                        "itemLongDescription": "Item long description",
                        "itemShortDescription": "Item short description",
                        "itemFamily": "",
                        "itemTypeCode": "",
                        "color": "blue",
                        "fit": "loose",
                        "loadLevel": "L",
                        "size": "M",
                        "style": "casual",
                        "hazardousMaterialFlag": false,
                        "originCodeFlag": false,
                        "lotTrackingFlag": false,
                        "lotFormatId": "",
                        "agingProfileName": "",
                        "timeToWarnForExpiration": 3600,
                        "FIFOWindow": 1,
                        "timeCode": "D",
                        "velocityZone": "",
                        "abcCode": "",
                        "serializationLevel": "D",
                        "serializationType": "OUTCAP_ONLY",
                        "costPerUnit": 100,
                        "currencyCode": "USD",
                        "shelfLife": 1,
                        "shelfLifeTimeCode": "H",
                        "supplierLotFlag": false,
                        "stockingUOM": "EA",
                        "expiryManufactureDateTracking": ""
                    },
                    "alternateParts": [
                        {
                            "alternateItemNumber": "ALT1",
                            "alternateItemType": "EAN",
                            "uomCode": "CS"
                        }
                    ],
                    "footprint": {
                        "footprintCode": "SAMPFTPRNT",
                        "longDescription": "Sample Foot print",
                        "shortDescription": "Short Description of item",
                        "casesPerLayer": 5,
                        "palletStackHeight": 0,
                        "footprintDetails": [
                            {
                                "footprintCode": "SAMPFTPRNT",
                                "uomCode": "EA",
                                "uomLevel": 0,
                                "uomQuantity": 1,
                                "unitUOMFlag": true,
                                "caseFlag": false,
                                "packFlag": false,
                                "palletFlag": false,
                                "bulkPickingFlag": true,
                                "cartonizationFlag": true,
                                "cartonDistributionFlag": false,
                                "layerFlag": false,
                                "grossWeight": 160,
                                "netWeight": 160,
                                "length": 1,
                                "width": 1,
                                "height": 1,
                                "thresholdPercentage": 100
                            }
                        ]
                    }
                }
            },
            "item_update": {
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/item"
                    }
                ],
                "required": [
                    "facilityId",
                    "customerId",
                    "itemNumber"
                ],
                "example": {
                    "facilityId": "GB_0044",
                    "customerId": "CID005233",
                    "itemNumber": "SER_0001",
                    "itemPart": {
                        "receiveStatus": "A",
                        "itemLongDescription": "Item long description",
                        "itemShortDescription": "Item short description",
                        "itemFamily": "",
                        "color": "blue",
                        "fit": "loose",
                        "loadLevel": "L",
                        "size": "M",
                        "style": "casual",
                        "itemTypeCode": "",
                        "hazardousMaterialFlag": false,
                        "originCodeFlag": false,
                        "lotTrackingFlag": false,
                        "lotFormatId": "",
                        "agingProfileName": "",
                        "timeToWarnForExpiration": 3600,
                        "FIFOWindow": 1,
                        "timeCode": "D",
                        "velocityZone": "",
                        "abcCode": "",
                        "serializationLevel": "D",
                        "serializationType": "OUTCAP_ONLY",
                        "costPerUnit": 100,
                        "currencyCode": "USD",
                        "shelfLife": 1,
                        "shelfLifeTimeCode": "H",
                        "supplierLotFlag": false,
                        "stockingUOM": "EA",
                        "expiryManufactureDateTracking": ""
                    },
                    "alternateParts": [
                        {
                            "alternateItemNumber": "ALT1",
                            "alternateItemType": "EAN",
                            "UOMCode": "CS"
                        }
                    ],
                    "footprint": {
                        "footprintCode": "SAMPFTPRNT",
                        "longDescription": "Sample Foot print",
                        "shortDescription": "Short Description of item",
                        "casesPerLayer": 5,
                        "palletStackHeight": 0,
                        "footprintDetails": [
                            {
                                "footprintCode": "SAMPFTPRNT",
                                "uomCode": "EA",
                                "uomLevel": 0,
                                "uomQuantity": 1,
                                "unitUOMFlag": true,
                                "caseFlag": false,
                                "packFlag": false,
                                "palletFlag": false,
                                "bulkPickingFlag": true,
                                "cartonizationFlag": true,
                                "cartonDistributionFlag": false,
                                "layerFlag": false,
                                "grossWeight": 160,
                                "netWeight": 160,
                                "length": 1,
                                "width": 1,
                                "height": 1,
                                "thresholdPercentage": 100
                            }
                        ]
                    }
                }
            },
            "problem_detail": {
                "type": "object",
                "description": "Definition of [RFC7807](https://tools.ietf.org/html/rfc7807) Problem Detail for HTTP APIs",
                "properties": {
                    "type": {
                        "type": "string"
                    },
                    "title": {
                        "type": "string"
                    },
                    "status": {
                        "type": "number"
                    },
                    "detail": {
                        "type": "string"
                    },
                    "instance": {
                        "type": "string"
                    }
                },
                "required": [
                    "title",
                    "detail"
                ]
            },
            "item_not_found": {
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/problem_detail"
                    }
                ],
                "example": {
                    "title": "Not Found",
                    "detail": "Cannot find the requested item",
                    "status": 404,
                    "instance": "item/SER_0001"
                }
            },
            "order_not_found": {
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/problem_detail"
                    }
                ],
                "example": {
                    "title": "Not Found",
                    "detail": "Cannot find the requested order",
                    "status": 404,
                    "instance": "order/ORD0001"
                }
            },
            "shipment_not_found": {
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/problem_detail"
                    }
                ],
                "example": {
                    "title": "Not Found",
                    "detail": "Cannot find the requested shipment",
                    "status": 404,
                    "instance": "shipment/RCPT0001"
                }
            },
            "item_input_invalid": {
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/problem_detail"
                    }
                ],
                "example": {
                    "title": "Bad Request",
                    "detail": "Invalid request",
                    "status": 400,
                    "instance": "item/ITEM0001"
                }
            },
            "order_input_invalid": {
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/problem_detail"
                    }
                ],
                "example": {
                    "title": "Bad Request",
                    "detail": "Invalid request",
                    "status": 400,
                    "instance": "order/ORD0001"
                }
            },
            "shipment_input_invalid": {
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/problem_detail"
                    }
                ],
                "example": {
                    "title": "Bad Request",
                    "detail": "Invalid request",
                    "status": 400,
                    "instance": "shipment/RCPT0001"
                }
            },
            "item_permission_refused": {
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/problem_detail"
                    }
                ],
                "example": {
                    "title": "Forbidden Error",
                    "detail": "API permission refused",
                    "status": 403,
                    "instance": "item/ITEM0001"
                }
            },
            "order_permission_refused": {
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/problem_detail"
                    }
                ],
                "example": {
                    "title": "Forbidden Error",
                    "detail": "API permission refused",
                    "status": 403,
                    "instance": "order/ORD0001"
                }
            },
            "shipment_permission_refused": {
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/problem_detail"
                    }
                ],
                "example": {
                    "title": "Forbidden Error",
                    "detail": "API permission refused",
                    "status": 403,
                    "instance": "shipment/RCPT0001"
                }
            },
            "item_conflict": {
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/problem_detail"
                    }
                ],
                "example": {
                    "title": "Request Could not be processed",
                    "detail": "Object already exists",
                    "status": 409,
                    "instance": "item/ITEM0001"
                }
            },
            "order_conflict": {
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/problem_detail"
                    }
                ],
                "example": {
                    "title": "Request Could not be processed",
                    "detail": "Object already exists",
                    "status": 409,
                    "instance": "order/ORD0001"
                }
            },
            "shipment_conflict": {
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/problem_detail"
                    }
                ],
                "example": {
                    "title": "Request Could not be processed",
                    "detail": "Object already exists",
                    "status": 409,
                    "instance": "shipment/RCPT0001"
                }
            },
            "item_service_unavailable": {
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/problem_detail"
                    }
                ],
                "example": {
                    "title": "Request Could not be processed",
                    "detail": "Service Unavailable",
                    "status": 503,
                    "instance": "item/SER_0001"
                }
            },
            "order_service_unavailable": {
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/problem_detail"
                    }
                ],
                "example": {
                    "title": "Request Could not be processed",
                    "detail": "Service Unavailable",
                    "status": 503,
                    "instance": "order/ORD0001"
                }
            },
            "shipment_service_unavailable": {
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/problem_detail"
                    }
                ],
                "example": {
                    "title": "Request Could not be processed",
                    "detail": "Service Unavailable",
                    "status": 503,
                    "instance": "shipment/RCPT0001"
                }
            }
        }
    }
}