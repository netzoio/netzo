{
    "swagger": "2.0",
    "info": {
        "version": "2.0.2",
        "title": "Tesla JSON API",
        "description": "A swagger representation of the unofficial Tesla API for Model S and Model X Vehicles.  To use the API directly from the SwaggerHub documentation, click the `Interactive API Docs` tab and follow these steps:\n* Authenticate with the `/oauth/token` operation.  Use your **tesla** email address and password\n* In the response, copy the `access_token` value.\n* Click the `Authenticate` button and enter `Bearer {access_token}` (replace `{access_token}` with the value you copied previously)\n\nYou are now logged in to the Tesla API from within the Swagger docs.  Typical usage of the API is performed by:\n\n* Since the API allows access to multiple Tesla vehicles under the same account, copy your `id` from the `/api/1/vehicles` operation response.\n* Enter the `id` value in the appropriate locations when calling the API\n"
    },
    "host": "owner-api.teslamotors.com",
    "schemes": [
        "https"
    ],
    "security": [
        {
            "bearer": []
        }
    ],
    "paths": {
        "/api/1/vehicles/{id}/command/set_charge_limit": {
            "post": {
                "operationId": "set_charge_limit",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID number of the car",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "percent",
                        "in": "query",
                        "description": "The percentage value",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/BooleanResponse"
                        }
                    }
                },
                "tags": [
                    "Operations"
                ]
            }
        },
        "/api/1/vehicles/{id}/command/door_unlock": {
            "post": {
                "operationId": "door_unlock",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID number of the car",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/BooleanResponse"
                        }
                    }
                },
                "tags": [
                    "Operations"
                ]
            }
        },
        "/api/1/vehicles/{id}/data_request/climate_state": {
            "get": {
                "operationId": "climate_state",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID number of the car",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/ClimateStateResponse"
                        }
                    }
                },
                "tags": [
                    "Operations"
                ]
            }
        },
        "/api/1/vehicles/{id}/command/auto_conditioning_start": {
            "post": {
                "operationId": "auto_conditioning_start",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID number of the car",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/BooleanResponse"
                        }
                    }
                },
                "tags": [
                    "Operations"
                ]
            }
        },
        "/api/1/vehicles/{id}/command/remote_start_drive": {
            "post": {
                "operationId": "remote_start_drive",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID number of the car",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "password",
                        "in": "query",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/BooleanResponse"
                        }
                    }
                },
                "tags": [
                    "Operations"
                ]
            }
        },
        "/api/1/vehicles/{id}/wake_up": {
            "post": {
                "operationId": "wake_up",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID number of the car",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/BooleanResponse"
                        }
                    }
                },
                "tags": [
                    "Operations"
                ]
            }
        },
        "/api/1/vehicles/{id}/command/trunk_open": {
            "post": {
                "operationId": "trunk_open",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID number of the car",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "which_trunk",
                        "in": "query",
                        "description": "the trunk to open",
                        "type": "string",
                        "enum": [
                            "rear"
                        ],
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/BooleanResponse"
                        }
                    }
                },
                "tags": [
                    "Operations"
                ]
            }
        },
        "/api/1/vehicles/{id}/data_request/drive_state": {
            "get": {
                "operationId": "drive_state",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID number of the car",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/DriveStateResponse"
                        }
                    }
                },
                "tags": [
                    "State"
                ]
            }
        },
        "/api/1/vehicles/{id}/command/door_lock": {
            "post": {
                "operationId": "door_lock",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID number of the car",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/BooleanResponse"
                        }
                    }
                },
                "tags": [
                    "Operations"
                ]
            }
        },
        "/api/1/vehicles/{id}/command/charge_max_range": {
            "post": {
                "operationId": "charge_max_range",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID number of the car",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/BooleanResponse"
                        }
                    }
                },
                "tags": [
                    "Operations"
                ]
            }
        },
        "/api/1/vehicles/{id}/command/charge_start": {
            "post": {
                "operationId": "charge_start",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID number of the car",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/BooleanResponse"
                        }
                    }
                },
                "tags": [
                    "Operations"
                ]
            }
        },
        "/api/1/vehicles/{id}/data_request/vehicle_state": {
            "get": {
                "operationId": "vehicle_state",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID number of the car",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/VehicleStateResponse"
                        }
                    }
                },
                "tags": [
                    "Operations"
                ]
            }
        },
        "/api/1/vehicles/{id}/command/honk_horn": {
            "post": {
                "operationId": "honk_horn",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID number of the car",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/BooleanResponse"
                        }
                    }
                },
                "tags": [
                    "Operations"
                ]
            }
        },
        "/api/1/vehicles/{id}/command/set_temps": {
            "post": {
                "operationId": "set_temps",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID number of the car",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "driver_temp",
                        "in": "query",
                        "description": "The desired temperature on the driver's side in celcius.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "passenger_temp",
                        "in": "query",
                        "description": "The desired temperature on the passenger's side in celcius.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/BooleanResponse"
                        }
                    }
                },
                "tags": [
                    "Operations"
                ]
            }
        },
        "/api/1/vehicles/{id}/mobile_enabled": {
            "get": {
                "operationId": "mobile_enabled",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID number of the car",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/BooleanResponse"
                        }
                    }
                },
                "tags": [
                    "State"
                ]
            }
        },
        "/api/1/vehicles": {
            "get": {
                "operationId": "/vehicles",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/VehiclesResponse"
                        }
                    }
                },
                "tags": [
                    "Vehicles"
                ]
            }
        },
        "/api/1/vehicles/{id}/command/sun_roof_control": {
            "post": {
                "operationId": "sun_roof_control",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID number of the car",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "state",
                        "in": "query",
                        "description": "The desired state of the panoramic roof. The approximate percent\\ \\ open values for each state are `open` = 100%, `close` = 0%, `comfort`\\ \\ = 80%, and `vent` = ~15%",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/BooleanResponse"
                        }
                    }
                },
                "tags": [
                    "Operations"
                ]
            }
        },
        "/api/1/vehicles/{id}/data_request/charge_state": {
            "get": {
                "operationId": "charge_state",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID number of the car",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/ChargeStateResponse"
                        }
                    }
                },
                "tags": [
                    "State"
                ]
            }
        },
        "/api/1/vehicles/{id}/command/charge_stop": {
            "post": {
                "operationId": "charge_stop",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID number of the car",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/BooleanResponse"
                        }
                    }
                },
                "tags": [
                    "Operations"
                ]
            }
        },
        "/oauth/token": {
            "post": {
                "operationId": "login",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "grant_type",
                        "in": "formData",
                        "type": "string",
                        "default": "password",
                        "required": true
                    },
                    {
                        "name": "client_id",
                        "in": "formData",
                        "type": "string",
                        "default": "e4a9949fcfa04068f59abb5a658f2bac0a3428e4652315490b659d5ab3f35a9e",
                        "required": true
                    },
                    {
                        "name": "client_secret",
                        "in": "formData",
                        "type": "string",
                        "default": "c75f14bbadc8bee3a7594412c31416f8300256d7668ea7e6e7f06727bfb9d220"
                    },
                    {
                        "name": "email",
                        "in": "formData",
                        "description": "the user email address",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "password",
                        "in": "formData",
                        "description": "the password",
                        "type": "string",
                        "format": "password",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/LoginSuccess"
                        }
                    },
                    "401": {
                        "description": "failed login",
                        "schema": {
                            "$ref": "#/definitions/LoginFailure"
                        }
                    }
                },
                "tags": [
                    "Authentication"
                ]
            }
        },
        "/api/1/vehicles/{id}/data_request/gui_settings": {
            "get": {
                "operationId": "gui_settings",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID number of the car",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/GuiStateResponse"
                        }
                    }
                },
                "tags": [
                    "State"
                ]
            }
        },
        "/api/1/vehicles/{id}/command/auto_conditioning_stop": {
            "post": {
                "operationId": "auto_conditioning_stop",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID number of the car",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success"
                    }
                },
                "tags": [
                    "Operations"
                ]
            }
        },
        "/api/1/vehicles/{id}/command/flash_lights": {
            "post": {
                "operationId": "flash_lights",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID number of the car",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/BooleanResponse"
                        }
                    }
                },
                "tags": [
                    "Operations"
                ]
            }
        }
    },
    "securityDefinitions": {
        "bearer": {
            "type": "apiKey",
            "in": "header",
            "name": "Authorization"
        }
    },
    "definitions": {
        "LoginFailure": {
            "properties": {
                "status": {
                    "type": "boolean"
                },
                "code": {
                    "type": "integer",
                    "format": "int32"
                },
                "region": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "data": {
                    "type": "object"
                },
                "homeRegion": {
                    "type": "string"
                }
            }
        },
        "VehicleState": {
            "properties": {
                "sun_roof_installed": {
                    "description": "panoramic roof is installed",
                    "type": "boolean",
                    "example": false
                },
                "df": {
                    "description": "driver's side front door open",
                    "type": "boolean",
                    "example": false
                },
                "pr": {
                    "description": "passenger's side rear door open",
                    "type": "boolean",
                    "example": false
                },
                "rt": {
                    "description": "rear trunk is open",
                    "type": "boolean",
                    "example": false
                },
                "dark_rims": {
                    "description": "gray rims installed",
                    "type": "boolean",
                    "example": false
                },
                "locked": {
                    "description": "car is locked",
                    "type": "boolean",
                    "example": true
                },
                "dr": {
                    "description": "driver's side rear door open",
                    "type": "boolean",
                    "example": false
                },
                "ft": {
                    "description": "front trunk is open",
                    "type": "boolean",
                    "example": false
                },
                "pf": {
                    "description": "passenger's side front door open",
                    "type": "boolean",
                    "example": false
                },
                "roof_color": {
                    "description": "None for panoramic roof",
                    "type": "string",
                    "example": "Colored"
                },
                "perf_config": {
                    "type": "string",
                    "example": "Base"
                },
                "sun_roof_state": {
                    "type": "string",
                    "example": "unknown"
                },
                "car_verson": {
                    "description": "car firmware version",
                    "type": "string",
                    "example": "1.19.42"
                },
                "sun_roof_percent_open": {
                    "description": "null if not installed",
                    "type": "integer",
                    "format": "int32",
                    "example": 0
                },
                "has_spoiler": {
                    "description": "spoiler is installed",
                    "type": "boolean",
                    "example": false
                },
                "wheel_type": {
                    "description": "wheel type installed",
                    "type": "string",
                    "example": "Base19"
                }
            }
        },
        "VehicleStateResponse": {
            "properties": {
                "response": {
                    "$ref": "#/definitions/VehicleState"
                }
            }
        },
        "DriveState": {
            "properties": {
                "shift_state": {
                    "type": "string"
                },
                "speed": {
                    "type": "number",
                    "format": "double"
                },
                "latitude": {
                    "description": "degrees north of equator",
                    "type": "number",
                    "format": "double",
                    "example": 37.4292
                },
                "longitude": {
                    "description": "degrees west of the prime meridian",
                    "type": "number",
                    "format": "double",
                    "example": 122.1381
                },
                "heading": {
                    "description": "integer compass heading",
                    "type": "integer",
                    "format": "int32",
                    "minimum": 0,
                    "maximum": 359,
                    "example": 6
                },
                "gps_as_of": {
                    "example": 1359865301
                }
            }
        },
        "VehiclesResponse": {
            "properties": {
                "response": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Vehicle"
                    }
                },
                "count": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "DriveStateResponse": {
            "properties": {
                "response": {
                    "$ref": "#/definitions/DriveState"
                }
            }
        },
        "BooleanResponse": {
            "properties": {
                "response": {
                    "type": "boolean"
                }
            }
        },
        "Vehicle": {
            "properties": {
                "color": {
                    "type": "string"
                },
                "display_name": {
                    "type": "string"
                },
                "vehicle_id": {
                    "type": "string",
                    "example": 1234567890
                },
                "user_id": {
                    "type": "integer",
                    "format": "int64",
                    "example": 123
                },
                "state": {
                    "type": "string",
                    "example": "online"
                },
                "tokens": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "vin": {
                    "type": "string",
                    "example": "5YJSA1CN5CFP01657"
                },
                "id": {
                    "type": "integer",
                    "format": "int32",
                    "example": 321
                },
                "option_codes": {
                    "type": "string",
                    "description": "comma-separated list of options",
                    "example": "MS01,RENA,TM00,DRLH,PF00,BT85,PBCW,RFPO,WT19,IBMB,IDPB,TR00,SU01,SC01,TP01,AU01,CH00,HP00,PA00,PS00,AD02,X020,X025,X001,X003,X007,X011,X013"
                }
            }
        },
        "ClimateState": {
            "properties": {
                "inside_temp": {
                    "description": "degC inside car",
                    "type": "number",
                    "format": "double",
                    "example": 17
                },
                "outside_temp": {
                    "description": "degC outside car or null",
                    "type": "number",
                    "format": "double",
                    "example": 9.5
                },
                "driver_temp_setting": {
                    "description": "degC of driver temperature setpoint",
                    "type": "number",
                    "format": "double",
                    "example": 22.6
                },
                "passenger_temp_setting": {
                    "description": "degC of passenger temperature setpoint",
                    "type": "number",
                    "format": "double",
                    "example": 22.6
                },
                "is_auto_conditioning_on": {
                    "type": "boolean",
                    "example": false
                },
                "is_front_defroster_on": {
                    "type": "integer",
                    "format": "int32"
                },
                "is_rear_defroster_on": {
                    "type": "boolean",
                    "example": false
                },
                "fan_status": {
                    "description": "fan speed 0-6 or null",
                    "type": "integer",
                    "format": "int32",
                    "example": 0
                }
            }
        },
        "ClimateStateResponse": {
            "properties": {
                "result": {
                    "$ref": "#/definitions/ClimateState"
                }
            }
        },
        "GuiState": {
            "properties": {
                "gui_distance_units": {
                    "type": "string",
                    "example": "mi/hr"
                },
                "gui_temperature_units": {
                    "type": "string",
                    "example": "F"
                },
                "gui_charge_rate_units": {
                    "type": "string",
                    "example": "mi/hr"
                },
                "gui_24_hour_time": {
                    "type": "boolean",
                    "example": false
                },
                "gui_range_display": {
                    "type": "string",
                    "example": "Rated"
                }
            }
        },
        "GuiStateResponse": {
            "properties": {
                "response": {
                    "$ref": "#/definitions/GuiState"
                }
            }
        },
        "LoginSuccess": {
            "properties": {
                "access_token": {
                    "type": "string"
                },
                "token_type": {
                    "type": "string"
                },
                "expires_in": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "ChargeState": {
            "properties": {
                "ideal_battery_range": {
                    "description": "ideal miles",
                    "type": "number",
                    "format": "double",
                    "example": 275.09
                },
                "charging_state": {
                    "type": "string",
                    "example": "Complete"
                },
                "charger_power": {
                    "description": "kW (rounded down) of charger",
                    "type": "integer",
                    "format": "int32"
                },
                "battery_current": {
                    "description": "current flowing into battery",
                    "type": "number",
                    "format": "double",
                    "example": -0.6
                },
                "charge_port_door_open": {
                    "type": "number",
                    "format": "double"
                },
                "charge_starting_range": {
                    "type": "number",
                    "format": "double"
                },
                "charge_to_max_range": {
                    "type": "boolean"
                },
                "charger_actual_current": {
                    "description": "current actually being drawn",
                    "type": "integer",
                    "format": "int32"
                },
                "battery_range": {
                    "description": "rated miles",
                    "type": "number",
                    "format": "double",
                    "example": 239.02
                },
                "charge_rate": {
                    "description": "mi/hr if charging or -1 if not charging",
                    "type": "number",
                    "format": "double",
                    "example": -1
                },
                "max_range_charge_counter": {
                    "type": "integer",
                    "format": "int32"
                },
                "charger_pilot_current": {
                    "description": "max current allowed by charger & adapter",
                    "type": "integer",
                    "format": "int32",
                    "example": 40
                },
                "est_battery_range": {
                    "description": "range estimated from recent driving",
                    "type": "number",
                    "format": "double",
                    "example": 155.79
                },
                "time_to_full_charge": {
                    "description": "only present while charging",
                    "type": "number",
                    "format": "double"
                },
                "battery_level": {
                    "description": "charge percentage",
                    "type": "integer",
                    "format": "int32",
                    "example": 91
                },
                "charge_starting_soc": {
                    "type": "number",
                    "format": "double"
                },
                "fast_charger_present": {
                    "type": "boolean",
                    "description": "connected to Supercharger?"
                },
                "charger_voltage": {
                    "description": "voltage present only while charging",
                    "type": "number",
                    "format": "double"
                }
            }
        },
        "ChargeStateResponse": {
            "properties": {
                "response": {
                    "$ref": "#/definitions/ChargeState"
                }
            }
        }
    }
}