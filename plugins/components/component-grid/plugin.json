{
  "uid": "component-grid",
  "type": "component",
  "version": "1.0.0",
  "status": "requested",
  "category": "core",
  "name": "Grid",
  "description": "Grid component for Netzo",
  "keywords": [
    "grid"
  ],
  "authors": [
    "miguel.romero@netzo.io"
  ],
  "license": "MIT",
  "main": "components/components/grid/index.js",
  "display": {
    "imageUrl": "https://raw.githubusercontent.com/netzoio/netzo/main/plugins/components/component-grid/src/assets/icon.png",
    "color": "",
    "screenshots": [
      {
        "label": "Screenshot of the component",
        "src": "https://raw.githubusercontent.com/netzoio/netzo/main/plugins/components/component-grid/src/assets/images/screenshot.png"
      }
    ]
  },
  "links": [
    {
      "rel": "author",
      "href": "https://netzo.io",
      "title": "Netzo"
    },
    {
      "rel": "repository",
      "href": "https://github.com/netzoio/netzo/tree/main/plugins/components/component-grid"
    },
    {
      "rel": "readme",
      "href": "https://raw.githubusercontent.com/netzoio/netzo/main/plugins/components/component-grid/README.md"
    },
    {
      "rel": "license",
      "href": "https://raw.githubusercontent.com/netzoio/netzo/main/LICENSE"
    }
  ],
  "form": {
    "model": {
      "uid": "component-grid",
      "w": 6,
      "h": 12,
      "name": "",
      "description": "",
      "value": [
        [
          0,
          50,
          99,
          100
        ],
        [
          true,
          24,
          false,
          true
        ],
        [
          false,
          76,
          34,
          2000
        ],
        [
          40,
          false,
          true,
          1
        ]
      ],
      "eventHandlers": [],
      "display": {
        "transparent": false,
        "hideToolbar": false,
        "showValues": true,
        "colorTrueOrMax": "#44C47D",
        "colorFalseOrMin": "#d73a49",
        "color": "",
        "bgImageUrl": ""
      },
      "grid": {
        "autoFlow": "row",
        "gap": 24
      }
    },
    "schema": {
      "type": "object",
      "x-display": "expansion-panels",
      "x-props": {
        "value": [
          0,
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8,
          9
        ]
      },
      "properties": {
        "_type": {
          "const": "component"
        },
        "uid": {
          "const": "component-grid"
        },
        "name": {
          "type": "string",
          "title": "Display name",
          "x-display": "custom-vjs-template-string"
        },
        "description": {
          "type": "string",
          "title": "Description",
          "x-display": "custom-vjs-template-string"
        },
        "value": {
          "type": "string",
          "title": "Value",
          "description": "Component expects variable with <strong>array</strong> value.",
          "x-display": "custom-vjs-template-string",
          "x-schema": {},
          "x-types": [
            "array"
          ]
        }
      },
      "allOf": [
        {
          "type": "object",
          "title": "Event Handlers (soon)",
          "properties": {
            "eventHandlers": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {}
              },
              "x-display": "custom-vjs-array-event-handlers",
              "x-types": [
                "component"
              ],
              "x-events": [
                "data",
                "click",
                "change"
              ]
            }
          }
        },
        {
          "type": "object",
          "title": "Display",
          "properties": {
            "display": {
              "type": "object",
              "properties": {
                "transparent": {
                  "type": "boolean",
                  "title": "Transparent"
                },
                "hideToolbar": {
                  "type": "boolean",
                  "title": "Hide Toolbar"
                },
                "showValues": {
                  "type": "boolean",
                  "title": "Show Values"
                },
                "colorTrueOrMax": {
                  "type": "string",
                  "title": "Color when true or at max",
                  "description": "Color when true for boolean values, or the maximum color in range for which to interpolate a numeric value",
                  "description": "A color in hexadecimal format (e.g. #0080ff). Must start with a '#'.",
                  "format": "hexcolor",
                  "x-display": "custom-vjs-template-string"
                },
                "colorFalseOrMin": {
                  "type": "string",
                  "title": "Color when false or at min",
                  "description": "Color when false for boolean values, or the minimum color in range for which to interpolate a numeric value",
                  "description": "A color in hexadecimal format (e.g. #0080ff). Must start with a '#'.",
                  "format": "hexcolor",
                  "x-display": "custom-vjs-template-string"
                },
                "color": {
                  "type": "string",
                  "title": "Color",
                  "description": "A color in hexadecimal format (e.g. #0080ff). Must start with a '#'.",
                  "format": "hexcolor",
                  "x-display": "custom-vjs-template-string"
                },
                "bgImageUrl": {
                  "type": "string",
                  "title": "Background Image",
                  "description": "The URL of an image to use as background image.",
                  "x-display": "custom-vjs-template-string"
                }
              }
            }
          }
        },
        {
          "type": "object",
          "title": "Grid",
          "properties": {
            "grid": {
              "type": "object",
              "properties": {
                "autoFlow": {
                  "type": "string",
                  "title": "Auto flow",
                  "description": "The grid-auto-flow CSS property controls how the auto-placement algorithm works, specifying exactly how auto-placed items get flowed into the grid.",
                  "enum": [
                    "column",
                    "dense",
                    "row",
                    "column dense",
                    "row dense"
                  ]
                },
                "gap": {
                  "type": "integer",
                  "title": "Gap [px]",
                  "description": "The gap CSS property sets the gaps (gutters) between rows and columns. It is a shorthand for row-gap and column-gap.",
                  "minimum": 0
                }
              }
            }
          }
        }
      ]
    },
    "options": {}
  }
}